{"version":3,"file":"117-879811a3a7bfc91cf236.min.js","mappings":"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","sources":["webpack://Maintanence Tracker/./node_modules/draft-js/lib/EditorBidiService.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/EditorState.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/KeyBindingUtil.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/RichTextEditorUtil.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/SecondaryClipboard.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/SelectionState.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/adjustBlockDepthForContentState.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/applyEntityToContentBlock.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/applyEntityToContentState.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/convertFromDraftStateToRaw.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/convertFromHTMLToContentBlocks.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/convertFromRawToDraftState.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/createCharacterList.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/decodeEntityRanges.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/decodeInlineStyleRanges.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/draftKeyUtils.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnBeforeInput.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnBlur.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnCompositionStart.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnCopy.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnCut.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnDragOver.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnDragStart.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnFocus.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnInput.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnKeyDown.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnPaste.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/editOnSelect.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/encodeEntityRanges.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/encodeInlineStyleRanges.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/expandRangeToStartOfLine.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/findAncestorOffsetKey.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/findRangesImmutable.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/generateRandomKey.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getCharacterRemovalRange.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getContentEditableContainer.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getContentStateFragment.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getCorrectDocumentFromNode.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getDefaultKeyBinding.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getDraftEditorSelection.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getDraftEditorSelectionWithNodes.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getEntityKeyForSelection.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getFragmentFromSelection.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getNextDelimiterBlockKey.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getOwnObjectValues.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getRangeBoundingClientRect.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getRangeClientRects.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getRangesForDraftEntity.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getSafeBodyFromHTML.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getSelectionOffsetKeyForNode.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getTextContentFromFiles.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getUpdatedSelectionState.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getVisibleSelectionRect.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/getWindowForNode.js","webpack://Maintanence Tracker/./node_modules/draft-js/lib/gkx.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UnicodeBidiService = require(\"fbjs/lib/UnicodeBidiService\");\n\nvar Immutable = require(\"immutable\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar OrderedMap = Immutable.OrderedMap;\nvar bidiService;\nvar EditorBidiService = {\n  getDirectionMap: function getDirectionMap(content, prevBidiMap) {\n    if (!bidiService) {\n      bidiService = new UnicodeBidiService();\n    } else {\n      bidiService.reset();\n    }\n\n    var blockMap = content.getBlockMap();\n    var nextBidi = blockMap.valueSeq().map(function (block) {\n      return nullthrows(bidiService).getDirection(block.getText());\n    });\n    var bidiMap = OrderedMap(blockMap.keySeq().zip(nextBidi));\n\n    if (prevBidiMap != null && Immutable.is(prevBidiMap, bidiMap)) {\n      return prevBidiMap;\n    }\n\n    return bidiMap;\n  }\n};\nmodule.exports = EditorBidiService;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar BlockTree = require(\"./BlockTree\");\n\nvar ContentState = require(\"./ContentState\");\n\nvar EditorBidiService = require(\"./EditorBidiService\");\n\nvar SelectionState = require(\"./SelectionState\");\n\nvar Immutable = require(\"immutable\");\n\nvar OrderedSet = Immutable.OrderedSet,\n    Record = Immutable.Record,\n    Stack = Immutable.Stack,\n    OrderedMap = Immutable.OrderedMap,\n    List = Immutable.List; // When configuring an editor, the user can chose to provide or not provide\n// basically all keys. `currentContent` varies, so this type doesn't include it.\n// (See the types defined below.)\n\nvar defaultRecord = {\n  allowUndo: true,\n  currentContent: null,\n  decorator: null,\n  directionMap: null,\n  forceSelection: false,\n  inCompositionMode: false,\n  inlineStyleOverride: null,\n  lastChangeType: null,\n  nativelyRenderedContent: null,\n  redoStack: Stack(),\n  selection: null,\n  treeMap: null,\n  undoStack: Stack()\n};\nvar EditorStateRecord = Record(defaultRecord);\n\nvar EditorState = /*#__PURE__*/function () {\n  EditorState.createEmpty = function createEmpty(decorator) {\n    return this.createWithText('', decorator);\n  };\n\n  EditorState.createWithText = function createWithText(text, decorator) {\n    return EditorState.createWithContent(ContentState.createFromText(text), decorator);\n  };\n\n  EditorState.createWithContent = function createWithContent(contentState, decorator) {\n    if (contentState.getBlockMap().count() === 0) {\n      return EditorState.createEmpty(decorator);\n    }\n\n    var firstKey = contentState.getBlockMap().first().getKey();\n    return EditorState.create({\n      currentContent: contentState,\n      undoStack: Stack(),\n      redoStack: Stack(),\n      decorator: decorator || null,\n      selection: SelectionState.createEmpty(firstKey)\n    });\n  };\n\n  EditorState.create = function create(config) {\n    var currentContent = config.currentContent,\n        decorator = config.decorator;\n\n    var recordConfig = _objectSpread({}, config, {\n      treeMap: generateNewTreeMap(currentContent, decorator),\n      directionMap: EditorBidiService.getDirectionMap(currentContent)\n    });\n\n    return new EditorState(new EditorStateRecord(recordConfig));\n  };\n\n  EditorState.fromJS = function fromJS(config) {\n    return new EditorState(new EditorStateRecord(_objectSpread({}, config, {\n      directionMap: config.directionMap != null ? OrderedMap(config.directionMap) : config.directionMap,\n      inlineStyleOverride: config.inlineStyleOverride != null ? OrderedSet(config.inlineStyleOverride) : config.inlineStyleOverride,\n      nativelyRenderedContent: config.nativelyRenderedContent != null ? ContentState.fromJS(config.nativelyRenderedContent) : config.nativelyRenderedContent,\n      redoStack: config.redoStack != null ? Stack(config.redoStack.map(function (v) {\n        return ContentState.fromJS(v);\n      })) : config.redoStack,\n      selection: config.selection != null ? new SelectionState(config.selection) : config.selection,\n      treeMap: config.treeMap != null ? OrderedMap(config.treeMap).map(function (v) {\n        return List(v).map(function (v) {\n          return BlockTree.fromJS(v);\n        });\n      }) : config.treeMap,\n      undoStack: config.undoStack != null ? Stack(config.undoStack.map(function (v) {\n        return ContentState.fromJS(v);\n      })) : config.undoStack,\n      currentContent: ContentState.fromJS(config.currentContent)\n    })));\n  };\n\n  EditorState.set = function set(editorState, put) {\n    var map = editorState.getImmutable().withMutations(function (state) {\n      var existingDecorator = state.get('decorator');\n      var decorator = existingDecorator;\n\n      if (put.decorator === null) {\n        decorator = null;\n      } else if (put.decorator) {\n        decorator = put.decorator;\n      }\n\n      var newContent = put.currentContent || editorState.getCurrentContent();\n\n      if (decorator !== existingDecorator) {\n        var treeMap = state.get('treeMap');\n        var newTreeMap;\n\n        if (decorator && existingDecorator) {\n          newTreeMap = regenerateTreeForNewDecorator(newContent, newContent.getBlockMap(), treeMap, decorator, existingDecorator);\n        } else {\n          newTreeMap = generateNewTreeMap(newContent, decorator);\n        }\n\n        state.merge({\n          decorator: decorator,\n          treeMap: newTreeMap,\n          nativelyRenderedContent: null\n        });\n        return;\n      }\n\n      var existingContent = editorState.getCurrentContent();\n\n      if (newContent !== existingContent) {\n        state.set('treeMap', regenerateTreeForNewBlocks(editorState, newContent.getBlockMap(), newContent.getEntityMap(), decorator));\n      }\n\n      state.merge(put);\n    });\n    return new EditorState(map);\n  };\n\n  var _proto = EditorState.prototype;\n\n  _proto.toJS = function toJS() {\n    return this.getImmutable().toJS();\n  };\n\n  _proto.getAllowUndo = function getAllowUndo() {\n    return this.getImmutable().get('allowUndo');\n  };\n\n  _proto.getCurrentContent = function getCurrentContent() {\n    return this.getImmutable().get('currentContent');\n  };\n\n  _proto.getUndoStack = function getUndoStack() {\n    return this.getImmutable().get('undoStack');\n  };\n\n  _proto.getRedoStack = function getRedoStack() {\n    return this.getImmutable().get('redoStack');\n  };\n\n  _proto.getSelection = function getSelection() {\n    return this.getImmutable().get('selection');\n  };\n\n  _proto.getDecorator = function getDecorator() {\n    return this.getImmutable().get('decorator');\n  };\n\n  _proto.isInCompositionMode = function isInCompositionMode() {\n    return this.getImmutable().get('inCompositionMode');\n  };\n\n  _proto.mustForceSelection = function mustForceSelection() {\n    return this.getImmutable().get('forceSelection');\n  };\n\n  _proto.getNativelyRenderedContent = function getNativelyRenderedContent() {\n    return this.getImmutable().get('nativelyRenderedContent');\n  };\n\n  _proto.getLastChangeType = function getLastChangeType() {\n    return this.getImmutable().get('lastChangeType');\n  }\n  /**\n   * While editing, the user may apply inline style commands with a collapsed\n   * cursor, intending to type text that adopts the specified style. In this\n   * case, we track the specified style as an \"override\" that takes precedence\n   * over the inline style of the text adjacent to the cursor.\n   *\n   * If null, there is no override in place.\n   */\n  ;\n\n  _proto.getInlineStyleOverride = function getInlineStyleOverride() {\n    return this.getImmutable().get('inlineStyleOverride');\n  };\n\n  EditorState.setInlineStyleOverride = function setInlineStyleOverride(editorState, inlineStyleOverride) {\n    return EditorState.set(editorState, {\n      inlineStyleOverride: inlineStyleOverride\n    });\n  }\n  /**\n   * Get the appropriate inline style for the editor state. If an\n   * override is in place, use it. Otherwise, the current style is\n   * based on the location of the selection state.\n   */\n  ;\n\n  _proto.getCurrentInlineStyle = function getCurrentInlineStyle() {\n    var override = this.getInlineStyleOverride();\n\n    if (override != null) {\n      return override;\n    }\n\n    var content = this.getCurrentContent();\n    var selection = this.getSelection();\n\n    if (selection.isCollapsed()) {\n      return getInlineStyleForCollapsedSelection(content, selection);\n    }\n\n    return getInlineStyleForNonCollapsedSelection(content, selection);\n  };\n\n  _proto.getBlockTree = function getBlockTree(blockKey) {\n    return this.getImmutable().getIn(['treeMap', blockKey]);\n  };\n\n  _proto.isSelectionAtStartOfContent = function isSelectionAtStartOfContent() {\n    var firstKey = this.getCurrentContent().getBlockMap().first().getKey();\n    return this.getSelection().hasEdgeWithin(firstKey, 0, 0);\n  };\n\n  _proto.isSelectionAtEndOfContent = function isSelectionAtEndOfContent() {\n    var content = this.getCurrentContent();\n    var blockMap = content.getBlockMap();\n    var last = blockMap.last();\n    var end = last.getLength();\n    return this.getSelection().hasEdgeWithin(last.getKey(), end, end);\n  };\n\n  _proto.getDirectionMap = function getDirectionMap() {\n    return this.getImmutable().get('directionMap');\n  }\n  /**\n   * Incorporate native DOM selection changes into the EditorState. This\n   * method can be used when we simply want to accept whatever the DOM\n   * has given us to represent selection, and we do not need to re-render\n   * the editor.\n   *\n   * To forcibly move the DOM selection, see `EditorState.forceSelection`.\n   */\n  ;\n\n  EditorState.acceptSelection = function acceptSelection(editorState, selection) {\n    return updateSelection(editorState, selection, false);\n  }\n  /**\n   * At times, we need to force the DOM selection to be where we\n   * need it to be. This can occur when the anchor or focus nodes\n   * are non-text nodes, for instance. In this case, we want to trigger\n   * a re-render of the editor, which in turn forces selection into\n   * the correct place in the DOM. The `forceSelection` method\n   * accomplishes this.\n   *\n   * This method should be used in cases where you need to explicitly\n   * move the DOM selection from one place to another without a change\n   * in ContentState.\n   */\n  ;\n\n  EditorState.forceSelection = function forceSelection(editorState, selection) {\n    if (!selection.getHasFocus()) {\n      selection = selection.set('hasFocus', true);\n    }\n\n    return updateSelection(editorState, selection, true);\n  }\n  /**\n   * Move selection to the end of the editor without forcing focus.\n   */\n  ;\n\n  EditorState.moveSelectionToEnd = function moveSelectionToEnd(editorState) {\n    var content = editorState.getCurrentContent();\n    var lastBlock = content.getLastBlock();\n    var lastKey = lastBlock.getKey();\n    var length = lastBlock.getLength();\n    return EditorState.acceptSelection(editorState, new SelectionState({\n      anchorKey: lastKey,\n      anchorOffset: length,\n      focusKey: lastKey,\n      focusOffset: length,\n      isBackward: false\n    }));\n  }\n  /**\n   * Force focus to the end of the editor. This is useful in scenarios\n   * where we want to programmatically focus the input and it makes sense\n   * to allow the user to continue working seamlessly.\n   */\n  ;\n\n  EditorState.moveFocusToEnd = function moveFocusToEnd(editorState) {\n    var afterSelectionMove = EditorState.moveSelectionToEnd(editorState);\n    return EditorState.forceSelection(afterSelectionMove, afterSelectionMove.getSelection());\n  }\n  /**\n   * Push the current ContentState onto the undo stack if it should be\n   * considered a boundary state, and set the provided ContentState as the\n   * new current content.\n   */\n  ;\n\n  EditorState.push = function push(editorState, contentState, changeType) {\n    var forceSelection = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n    if (editorState.getCurrentContent() === contentState) {\n      return editorState;\n    }\n\n    var directionMap = EditorBidiService.getDirectionMap(contentState, editorState.getDirectionMap());\n\n    if (!editorState.getAllowUndo()) {\n      return EditorState.set(editorState, {\n        currentContent: contentState,\n        directionMap: directionMap,\n        lastChangeType: changeType,\n        selection: contentState.getSelectionAfter(),\n        forceSelection: forceSelection,\n        inlineStyleOverride: null\n      });\n    }\n\n    var selection = editorState.getSelection();\n    var currentContent = editorState.getCurrentContent();\n    var undoStack = editorState.getUndoStack();\n    var newContent = contentState;\n\n    if (selection !== currentContent.getSelectionAfter() || mustBecomeBoundary(editorState, changeType)) {\n      undoStack = undoStack.push(currentContent);\n      newContent = newContent.set('selectionBefore', selection);\n    } else if (changeType === 'insert-characters' || changeType === 'backspace-character' || changeType === 'delete-character') {\n      // Preserve the previous selection.\n      newContent = newContent.set('selectionBefore', currentContent.getSelectionBefore());\n    }\n\n    var inlineStyleOverride = editorState.getInlineStyleOverride(); // Don't discard inline style overrides for the following change types:\n\n    var overrideChangeTypes = ['adjust-depth', 'change-block-type', 'split-block'];\n\n    if (overrideChangeTypes.indexOf(changeType) === -1) {\n      inlineStyleOverride = null;\n    }\n\n    var editorStateChanges = {\n      currentContent: newContent,\n      directionMap: directionMap,\n      undoStack: undoStack,\n      redoStack: Stack(),\n      lastChangeType: changeType,\n      selection: contentState.getSelectionAfter(),\n      forceSelection: forceSelection,\n      inlineStyleOverride: inlineStyleOverride\n    };\n    return EditorState.set(editorState, editorStateChanges);\n  }\n  /**\n   * Make the top ContentState in the undo stack the new current content and\n   * push the current content onto the redo stack.\n   */\n  ;\n\n  EditorState.undo = function undo(editorState) {\n    if (!editorState.getAllowUndo()) {\n      return editorState;\n    }\n\n    var undoStack = editorState.getUndoStack();\n    var newCurrentContent = undoStack.peek();\n\n    if (!newCurrentContent) {\n      return editorState;\n    }\n\n    var currentContent = editorState.getCurrentContent();\n    var directionMap = EditorBidiService.getDirectionMap(newCurrentContent, editorState.getDirectionMap());\n    return EditorState.set(editorState, {\n      currentContent: newCurrentContent,\n      directionMap: directionMap,\n      undoStack: undoStack.shift(),\n      redoStack: editorState.getRedoStack().push(currentContent),\n      forceSelection: true,\n      inlineStyleOverride: null,\n      lastChangeType: 'undo',\n      nativelyRenderedContent: null,\n      selection: currentContent.getSelectionBefore()\n    });\n  }\n  /**\n   * Make the top ContentState in the redo stack the new current content and\n   * push the current content onto the undo stack.\n   */\n  ;\n\n  EditorState.redo = function redo(editorState) {\n    if (!editorState.getAllowUndo()) {\n      return editorState;\n    }\n\n    var redoStack = editorState.getRedoStack();\n    var newCurrentContent = redoStack.peek();\n\n    if (!newCurrentContent) {\n      return editorState;\n    }\n\n    var currentContent = editorState.getCurrentContent();\n    var directionMap = EditorBidiService.getDirectionMap(newCurrentContent, editorState.getDirectionMap());\n    return EditorState.set(editorState, {\n      currentContent: newCurrentContent,\n      directionMap: directionMap,\n      undoStack: editorState.getUndoStack().push(currentContent),\n      redoStack: redoStack.shift(),\n      forceSelection: true,\n      inlineStyleOverride: null,\n      lastChangeType: 'redo',\n      nativelyRenderedContent: null,\n      selection: newCurrentContent.getSelectionAfter()\n    });\n  }\n  /**\n   * Not for public consumption.\n   */\n  ;\n\n  function EditorState(immutable) {\n    _defineProperty(this, \"_immutable\", void 0);\n\n    this._immutable = immutable;\n  }\n  /**\n   * Not for public consumption.\n   */\n\n\n  _proto.getImmutable = function getImmutable() {\n    return this._immutable;\n  };\n\n  return EditorState;\n}();\n/**\n * Set the supplied SelectionState as the new current selection, and set\n * the `force` flag to trigger manual selection placement by the view.\n */\n\n\nfunction updateSelection(editorState, selection, forceSelection) {\n  return EditorState.set(editorState, {\n    selection: selection,\n    forceSelection: forceSelection,\n    nativelyRenderedContent: null,\n    inlineStyleOverride: null\n  });\n}\n/**\n * Regenerate the entire tree map for a given ContentState and decorator.\n * Returns an OrderedMap that maps all available ContentBlock objects.\n */\n\n\nfunction generateNewTreeMap(contentState, decorator) {\n  return contentState.getBlockMap().map(function (block) {\n    return BlockTree.generate(contentState, block, decorator);\n  }).toOrderedMap();\n}\n/**\n * Regenerate tree map objects for all ContentBlocks that have changed\n * between the current editorState and newContent. Returns an OrderedMap\n * with only changed regenerated tree map objects.\n */\n\n\nfunction regenerateTreeForNewBlocks(editorState, newBlockMap, newEntityMap, decorator) {\n  var contentState = editorState.getCurrentContent().set('entityMap', newEntityMap);\n  var prevBlockMap = contentState.getBlockMap();\n  var prevTreeMap = editorState.getImmutable().get('treeMap');\n  return prevTreeMap.merge(newBlockMap.toSeq().filter(function (block, key) {\n    return block !== prevBlockMap.get(key);\n  }).map(function (block) {\n    return BlockTree.generate(contentState, block, decorator);\n  }));\n}\n/**\n * Generate tree map objects for a new decorator object, preserving any\n * decorations that are unchanged from the previous decorator.\n *\n * Note that in order for this to perform optimally, decoration Lists for\n * decorators should be preserved when possible to allow for direct immutable\n * List comparison.\n */\n\n\nfunction regenerateTreeForNewDecorator(content, blockMap, previousTreeMap, decorator, existingDecorator) {\n  return previousTreeMap.merge(blockMap.toSeq().filter(function (block) {\n    return decorator.getDecorations(block, content) !== existingDecorator.getDecorations(block, content);\n  }).map(function (block) {\n    return BlockTree.generate(content, block, decorator);\n  }));\n}\n/**\n * Return whether a change should be considered a boundary state, given\n * the previous change type. Allows us to discard potential boundary states\n * during standard typing or deletion behavior.\n */\n\n\nfunction mustBecomeBoundary(editorState, changeType) {\n  var lastChangeType = editorState.getLastChangeType();\n  return changeType !== lastChangeType || changeType !== 'insert-characters' && changeType !== 'backspace-character' && changeType !== 'delete-character';\n}\n\nfunction getInlineStyleForCollapsedSelection(content, selection) {\n  var startKey = selection.getStartKey();\n  var startOffset = selection.getStartOffset();\n  var startBlock = content.getBlockForKey(startKey); // If the cursor is not at the start of the block, look backward to\n  // preserve the style of the preceding character.\n\n  if (startOffset > 0) {\n    return startBlock.getInlineStyleAt(startOffset - 1);\n  } // The caret is at position zero in this block. If the block has any\n  // text at all, use the style of the first character.\n\n\n  if (startBlock.getLength()) {\n    return startBlock.getInlineStyleAt(0);\n  } // Otherwise, look upward in the document to find the closest character.\n\n\n  return lookUpwardForInlineStyle(content, startKey);\n}\n\nfunction getInlineStyleForNonCollapsedSelection(content, selection) {\n  var startKey = selection.getStartKey();\n  var startOffset = selection.getStartOffset();\n  var startBlock = content.getBlockForKey(startKey); // If there is a character just inside the selection, use its style.\n\n  if (startOffset < startBlock.getLength()) {\n    return startBlock.getInlineStyleAt(startOffset);\n  } // Check if the selection at the end of a non-empty block. Use the last\n  // style in the block.\n\n\n  if (startOffset > 0) {\n    return startBlock.getInlineStyleAt(startOffset - 1);\n  } // Otherwise, look upward in the document to find the closest character.\n\n\n  return lookUpwardForInlineStyle(content, startKey);\n}\n\nfunction lookUpwardForInlineStyle(content, fromKey) {\n  var lastNonEmpty = content.getBlockMap().reverse().skipUntil(function (_, k) {\n    return k === fromKey;\n  }).skip(1).skipUntil(function (block, _) {\n    return block.getLength();\n  }).first();\n\n  if (lastNonEmpty) {\n    return lastNonEmpty.getInlineStyleAt(lastNonEmpty.getLength() - 1);\n  }\n\n  return OrderedSet();\n}\n\nmodule.exports = EditorState;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar isSoftNewlineEvent = require(\"./isSoftNewlineEvent\");\n\nvar isOSX = UserAgent.isPlatform('Mac OS X');\nvar KeyBindingUtil = {\n  /**\n   * Check whether the ctrlKey modifier is *not* being used in conjunction with\n   * the altKey modifier. If they are combined, the result is an `altGraph`\n   * key modifier, which should not be handled by this set of key bindings.\n   */\n  isCtrlKeyCommand: function isCtrlKeyCommand(e) {\n    return !!e.ctrlKey && !e.altKey;\n  },\n  isOptionKeyCommand: function isOptionKeyCommand(e) {\n    return isOSX && e.altKey;\n  },\n  usesMacOSHeuristics: function usesMacOSHeuristics() {\n    return isOSX;\n  },\n  hasCommandModifier: function hasCommandModifier(e) {\n    return isOSX ? !!e.metaKey && !e.altKey : KeyBindingUtil.isCtrlKeyCommand(e);\n  },\n  isSoftNewlineEvent: isSoftNewlineEvent\n};\nmodule.exports = KeyBindingUtil;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar adjustBlockDepthForContentState = require(\"./adjustBlockDepthForContentState\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar RichTextEditorUtil = {\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\n    var selection = editorState.getSelection();\n    var contentState = editorState.getCurrentContent();\n    var entityMap = contentState.getEntityMap();\n    return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\n      var entity = v.getEntity();\n      return !!entity && entityMap.__get(entity).getType() === 'LINK';\n    });\n  },\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\n    var selection = editorState.getSelection();\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  },\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\n    return {\n      url: uri.toString()\n    };\n  },\n  handleKeyCommand: function handleKeyCommand(editorState, command, eventTimeStamp) {\n    switch (command) {\n      case 'bold':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\n\n      case 'italic':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\n\n      case 'underline':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\n\n      case 'code':\n        return RichTextEditorUtil.toggleCode(editorState);\n\n      case 'backspace':\n      case 'backspace-word':\n      case 'backspace-to-start-of-line':\n        return RichTextEditorUtil.onBackspace(editorState);\n\n      case 'delete':\n      case 'delete-word':\n      case 'delete-to-end-of-block':\n        return RichTextEditorUtil.onDelete(editorState);\n\n      default:\n        // they may have custom editor commands; ignore those\n        return null;\n    }\n  },\n  insertSoftNewline: function insertSoftNewline(editorState) {\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\n  },\n\n  /**\n   * For collapsed selections at the start of styled blocks, backspace should\n   * just remove the existing style.\n   */\n  onBackspace: function onBackspace(editorState) {\n    var selection = editorState.getSelection();\n\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\n      return null;\n    } // First, try to remove a preceding atomic block.\n\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var blockBefore = content.getBlockBefore(startKey);\n\n    if (blockBefore && blockBefore.getType() === 'atomic') {\n      var blockMap = content.getBlockMap()[\"delete\"](blockBefore.getKey());\n      var withoutAtomicBlock = content.merge({\n        blockMap: blockMap,\n        selectionAfter: selection\n      });\n\n      if (withoutAtomicBlock !== content) {\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n      }\n    } // If that doesn't succeed, try to remove the current block style.\n\n\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\n\n    if (withoutBlockStyle) {\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\n    }\n\n    return null;\n  },\n  onDelete: function onDelete(editorState) {\n    var selection = editorState.getSelection();\n\n    if (!selection.isCollapsed()) {\n      return null;\n    }\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var block = content.getBlockForKey(startKey);\n    var length = block.getLength(); // The cursor is somewhere within the text. Behave normally.\n\n    if (selection.getStartOffset() < length) {\n      return null;\n    }\n\n    var blockAfter = content.getBlockAfter(startKey);\n\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\n      return null;\n    }\n\n    var atomicBlockTarget = selection.merge({\n      focusKey: blockAfter.getKey(),\n      focusOffset: blockAfter.getLength()\n    });\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\n\n    if (withoutAtomicBlock !== content) {\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n    }\n\n    return null;\n  },\n  onTab: function onTab(event, editorState, maxDepth) {\n    var selection = editorState.getSelection();\n    var key = selection.getAnchorKey();\n\n    if (key !== selection.getFocusKey()) {\n      return editorState;\n    }\n\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(key);\n    var type = block.getType();\n\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    event.preventDefault();\n    var depth = block.getDepth();\n\n    if (!event.shiftKey && depth === maxDepth) {\n      return editorState;\n    }\n\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\n  },\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\n    var selection = editorState.getSelection();\n    var startKey = selection.getStartKey();\n    var endKey = selection.getEndKey();\n    var content = editorState.getCurrentContent();\n    var target = selection; // Triple-click can lead to a selection that includes offset 0 of the\n    // following block. The `SelectionState` for this case is accurate, but\n    // we should avoid toggling block type for the trailing block because it\n    // is a confusing interaction.\n\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\n      endKey = blockBefore.getKey();\n      target = target.merge({\n        anchorKey: startKey,\n        anchorOffset: selection.getStartOffset(),\n        focusKey: endKey,\n        focusOffset: blockBefore.getLength(),\n        isBackward: false\n      });\n    }\n\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\n      return k !== startKey;\n    }).reverse().skipWhile(function (_, k) {\n      return k !== endKey;\n    }).some(function (v) {\n      return v.getType() === 'atomic';\n    });\n\n    if (hasAtomicBlock) {\n      return editorState;\n    }\n\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\n  },\n  toggleCode: function toggleCode(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var focusKey = selection.getFocusKey();\n\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\n    }\n\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\n  },\n\n  /**\n   * Toggle the specified inline style for the selection. If the\n   * user's selection is collapsed, apply or remove the style for the\n   * internal state. If it is not collapsed, apply the change directly\n   * to the document state.\n   */\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\n    var selection = editorState.getSelection();\n    var currentStyle = editorState.getCurrentInlineStyle(); // If the selection is collapsed, toggle the specified style on or off and\n    // set the result as the new inline style override. This will then be\n    // used as the inline style for the next character to be inserted.\n\n    if (selection.isCollapsed()) {\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\n    } // If characters are selected, immediately apply or remove the\n    // inline style on the document state itself.\n\n\n    var content = editorState.getCurrentContent();\n    var newContent; // If the style is already present for the selection range, remove it.\n    // Otherwise, apply it.\n\n    if (currentStyle.has(inlineStyle)) {\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\n    } else {\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\n    }\n\n    return EditorState.push(editorState, newContent, 'change-inline-style');\n  },\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\n  },\n\n  /**\n   * When a collapsed cursor is at the start of a styled block, changes block\n   * type to 'unstyled'. Returns null if selection does not meet that criteria.\n   */\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\n    var selection = editorState.getSelection();\n    var offset = selection.getAnchorOffset();\n\n    if (selection.isCollapsed() && offset === 0) {\n      var key = selection.getAnchorKey();\n      var content = editorState.getCurrentContent();\n      var block = content.getBlockForKey(key);\n      var type = block.getType();\n      var blockBefore = content.getBlockBefore(key);\n\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block' && blockBefore.getLength() !== 0) {\n        return null;\n      }\n\n      if (type !== 'unstyled') {\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\n      }\n    }\n\n    return null;\n  }\n};\nmodule.exports = RichTextEditorUtil;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar getContentStateFragment = require(\"./getContentStateFragment\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar clipboard = null;\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\n\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n\n      if (blockEnd === selection.getAnchorOffset()) {\n        var keyAfter = content.getKeyAfter(anchorKey);\n\n        if (keyAfter == null) {\n          return editorState;\n        }\n\n        targetRange = selection.set('focusKey', keyAfter).set('focusOffset', 0);\n      } else {\n        targetRange = selection.set('focusOffset', blockEnd);\n      }\n    } else {\n      targetRange = selection;\n    }\n\n    targetRange = nullthrows(targetRange); // TODO: This should actually append to the current state when doing\n    // successive ^K commands without any other cursor movement\n\n    clipboard = getContentStateFragment(content, targetRange);\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n\n    if (afterRemoval === content) {\n      return editorState;\n    }\n\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\nmodule.exports = SecondaryClipboard;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Immutable = require(\"immutable\");\n\nvar Record = Immutable.Record;\nvar defaultRecord = {\n  anchorKey: '',\n  anchorOffset: 0,\n  focusKey: '',\n  focusOffset: 0,\n  isBackward: false,\n  hasFocus: false\n};\n/* $FlowFixMe[unclear-type] This comment suppresses an error found when\n * automatically adding a type annotation with the codemod Komodo/Annotate_\n * exports. To see the error delete this comment and run Flow. */\n\nvar SelectionStateRecord = Record(defaultRecord);\n\nvar SelectionState = /*#__PURE__*/function (_SelectionStateRecord) {\n  _inheritsLoose(SelectionState, _SelectionStateRecord);\n\n  function SelectionState() {\n    return _SelectionStateRecord.apply(this, arguments) || this;\n  }\n\n  var _proto = SelectionState.prototype;\n\n  _proto.serialize = function serialize() {\n    return 'Anchor: ' + this.getAnchorKey() + ':' + this.getAnchorOffset() + ', ' + 'Focus: ' + this.getFocusKey() + ':' + this.getFocusOffset() + ', ' + 'Is Backward: ' + String(this.getIsBackward()) + ', ' + 'Has Focus: ' + String(this.getHasFocus());\n  };\n\n  _proto.getAnchorKey = function getAnchorKey() {\n    return this.get('anchorKey');\n  };\n\n  _proto.getAnchorOffset = function getAnchorOffset() {\n    return this.get('anchorOffset');\n  };\n\n  _proto.getFocusKey = function getFocusKey() {\n    return this.get('focusKey');\n  };\n\n  _proto.getFocusOffset = function getFocusOffset() {\n    return this.get('focusOffset');\n  };\n\n  _proto.getIsBackward = function getIsBackward() {\n    return this.get('isBackward');\n  };\n\n  _proto.getHasFocus = function getHasFocus() {\n    return this.get('hasFocus');\n  }\n  /**\n   * Return whether the specified range overlaps with an edge of the\n   * SelectionState.\n   */\n  ;\n\n  _proto.hasEdgeWithin = function hasEdgeWithin(blockKey, start, end) {\n    var anchorKey = this.getAnchorKey();\n    var focusKey = this.getFocusKey();\n\n    if (anchorKey === focusKey && anchorKey === blockKey) {\n      var selectionStart = this.getStartOffset();\n      var selectionEnd = this.getEndOffset();\n      return start <= selectionStart && selectionStart <= end || // selectionStart is between start and end, or\n      start <= selectionEnd && selectionEnd <= end // selectionEnd is between start and end\n      ;\n    }\n\n    if (blockKey !== anchorKey && blockKey !== focusKey) {\n      return false;\n    }\n\n    var offsetToCheck = blockKey === anchorKey ? this.getAnchorOffset() : this.getFocusOffset();\n    return start <= offsetToCheck && end >= offsetToCheck;\n  };\n\n  _proto.isCollapsed = function isCollapsed() {\n    return this.getAnchorKey() === this.getFocusKey() && this.getAnchorOffset() === this.getFocusOffset();\n  };\n\n  _proto.getStartKey = function getStartKey() {\n    return this.getIsBackward() ? this.getFocusKey() : this.getAnchorKey();\n  };\n\n  _proto.getStartOffset = function getStartOffset() {\n    return this.getIsBackward() ? this.getFocusOffset() : this.getAnchorOffset();\n  };\n\n  _proto.getEndKey = function getEndKey() {\n    return this.getIsBackward() ? this.getAnchorKey() : this.getFocusKey();\n  };\n\n  _proto.getEndOffset = function getEndOffset() {\n    return this.getIsBackward() ? this.getAnchorOffset() : this.getFocusOffset();\n  };\n\n  SelectionState.createEmpty = function createEmpty(key) {\n    return new SelectionState({\n      anchorKey: key,\n      anchorOffset: 0,\n      focusKey: key,\n      focusOffset: 0,\n      isBackward: false,\n      hasFocus: false\n    });\n  };\n\n  return SelectionState;\n}(SelectionStateRecord);\n\nmodule.exports = SelectionState;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction adjustBlockDepthForContentState(contentState, selectionState, adjustment, maxDepth) {\n  var startKey = selectionState.getStartKey();\n  var endKey = selectionState.getEndKey();\n  var blockMap = contentState.getBlockMap();\n  var blocks = blockMap.toSeq().skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).concat([[endKey, blockMap.get(endKey)]]).map(function (block) {\n    var depth = block.getDepth() + adjustment;\n    depth = Math.max(0, Math.min(depth, maxDepth));\n    return block.set('depth', depth);\n  });\n  blockMap = blockMap.merge(blocks);\n  return contentState.merge({\n    blockMap: blockMap,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n}\n\nmodule.exports = adjustBlockDepthForContentState;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar CharacterMetadata = require(\"./CharacterMetadata\");\n\nfunction applyEntityToContentBlock(contentBlock, startArg, end, entityKey) {\n  var start = startArg;\n  var characterList = contentBlock.getCharacterList();\n\n  while (start < end) {\n    characterList = characterList.set(start, CharacterMetadata.applyEntity(characterList.get(start), entityKey));\n    start++;\n  }\n\n  return contentBlock.set('characterList', characterList);\n}\n\nmodule.exports = applyEntityToContentBlock;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar applyEntityToContentBlock = require(\"./applyEntityToContentBlock\");\n\nvar Immutable = require(\"immutable\");\n\nfunction applyEntityToContentState(contentState, selectionState, entityKey) {\n  var blockMap = contentState.getBlockMap();\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n  var newBlocks = blockMap.skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).toOrderedMap().merge(Immutable.OrderedMap([[endKey, blockMap.get(endKey)]])).map(function (block, blockKey) {\n    var sliceStart = blockKey === startKey ? startOffset : 0;\n    var sliceEnd = blockKey === endKey ? endOffset : block.getLength();\n    return applyEntityToContentBlock(block, sliceStart, sliceEnd, entityKey);\n  });\n  return contentState.merge({\n    blockMap: blockMap.merge(newBlocks),\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n}\n\nmodule.exports = applyEntityToContentState;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar DraftStringKey = require(\"./DraftStringKey\");\n\nvar encodeEntityRanges = require(\"./encodeEntityRanges\");\n\nvar encodeInlineStyleRanges = require(\"./encodeInlineStyleRanges\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar createRawBlock = function createRawBlock(block, entityStorageMap) {\n  return {\n    key: block.getKey(),\n    text: block.getText(),\n    type: block.getType(),\n    depth: block.getDepth(),\n    inlineStyleRanges: encodeInlineStyleRanges(block),\n    entityRanges: encodeEntityRanges(block, entityStorageMap),\n    data: block.getData().toObject()\n  };\n};\n\nvar insertRawBlock = function insertRawBlock(block, entityMap, rawBlocks, blockCacheRef) {\n  if (block instanceof ContentBlock) {\n    rawBlocks.push(createRawBlock(block, entityMap));\n    return;\n  }\n\n  !(block instanceof ContentBlockNode) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'block is not a BlockNode') : invariant(false) : void 0;\n  var parentKey = block.getParentKey();\n\n  var rawBlock = blockCacheRef[block.getKey()] = _objectSpread({}, createRawBlock(block, entityMap), {\n    children: []\n  });\n\n  if (parentKey) {\n    blockCacheRef[parentKey].children.push(rawBlock);\n    return;\n  }\n\n  rawBlocks.push(rawBlock);\n};\n\nvar encodeRawBlocks = function encodeRawBlocks(contentState, rawState) {\n  var entityMap = rawState.entityMap;\n  var rawBlocks = [];\n  var blockCacheRef = {};\n  var entityCacheRef = {};\n  var entityStorageKey = 0;\n  contentState.getBlockMap().forEach(function (block) {\n    block.findEntityRanges(function (character) {\n      return character.getEntity() !== null;\n    }, function (start) {\n      var entityKey = block.getEntityAt(start); // Stringify to maintain order of otherwise numeric keys.\n\n      var stringifiedEntityKey = DraftStringKey.stringify(entityKey); // This makes this function resilient to two entities\n      // erroneously having the same key\n\n      if (entityCacheRef[stringifiedEntityKey]) {\n        return;\n      }\n\n      entityCacheRef[stringifiedEntityKey] = entityKey; // we need the `any` casting here since this is a temporary state\n      // where we will later on flip the entity map and populate it with\n      // real entity, at this stage we just need to map back the entity\n      // key used by the BlockNode\n\n      entityMap[stringifiedEntityKey] = \"\".concat(entityStorageKey);\n      entityStorageKey++;\n    });\n    insertRawBlock(block, entityMap, rawBlocks, blockCacheRef);\n  });\n  return {\n    blocks: rawBlocks,\n    entityMap: entityMap\n  };\n}; // Flip storage map so that our storage keys map to global\n// DraftEntity keys.\n\n\nvar encodeRawEntityMap = function encodeRawEntityMap(contentState, rawState) {\n  var blocks = rawState.blocks,\n      entityMap = rawState.entityMap;\n  var rawEntityMap = {};\n  Object.keys(entityMap).forEach(function (key, index) {\n    var entity = contentState.getEntity(DraftStringKey.unstringify(key));\n    rawEntityMap[index] = {\n      type: entity.getType(),\n      mutability: entity.getMutability(),\n      data: entity.getData()\n    };\n  });\n  return {\n    blocks: blocks,\n    entityMap: rawEntityMap\n  };\n};\n\nvar convertFromDraftStateToRaw = function convertFromDraftStateToRaw(contentState) {\n  var rawDraftContentState = {\n    entityMap: {},\n    blocks: []\n  }; // add blocks\n\n  rawDraftContentState = encodeRawBlocks(contentState, rawDraftContentState); // add entities\n\n  rawDraftContentState = encodeRawEntityMap(contentState, rawDraftContentState);\n  return rawDraftContentState;\n};\n\nmodule.exports = convertFromDraftStateToRaw;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar _knownListItemDepthCl;\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CharacterMetadata = require(\"./CharacterMetadata\");\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar DefaultDraftBlockRenderMap = require(\"./DefaultDraftBlockRenderMap\");\n\nvar DraftEntity = require(\"./DraftEntity\");\n\nvar URI = require(\"fbjs/lib/URI\");\n\nvar cx = require(\"fbjs/lib/cx\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar getSafeBodyFromHTML = require(\"./getSafeBodyFromHTML\");\n\nvar gkx = require(\"./gkx\");\n\nvar _require = require(\"immutable\"),\n    List = _require.List,\n    Map = _require.Map,\n    OrderedSet = _require.OrderedSet;\n\nvar isHTMLAnchorElement = require(\"./isHTMLAnchorElement\");\n\nvar isHTMLBRElement = require(\"./isHTMLBRElement\");\n\nvar isHTMLElement = require(\"./isHTMLElement\");\n\nvar isHTMLImageElement = require(\"./isHTMLImageElement\");\n\nvar experimentalTreeDataSupport = gkx('draft_tree_data_support');\nvar NBSP = '&nbsp;';\nvar SPACE = ' '; // used for replacing characters in HTML\n\nvar REGEX_CR = new RegExp('\\r', 'g');\nvar REGEX_LF = new RegExp('\\n', 'g');\nvar REGEX_LEADING_LF = new RegExp('^\\n', 'g');\nvar REGEX_NBSP = new RegExp(NBSP, 'g');\nvar REGEX_CARRIAGE = new RegExp('&#13;?', 'g');\nvar REGEX_ZWS = new RegExp('&#8203;?', 'g'); // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\n\nvar boldValues = ['bold', 'bolder', '500', '600', '700', '800', '900'];\nvar notBoldValues = ['light', 'lighter', 'normal', '100', '200', '300', '400'];\nvar anchorAttr = ['className', 'href', 'rel', 'target', 'title'];\nvar imgAttr = ['alt', 'className', 'height', 'src', 'width'];\nvar knownListItemDepthClasses = (_knownListItemDepthCl = {}, _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth0'), 0), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth1'), 1), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth2'), 2), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth3'), 3), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth4'), 4), _knownListItemDepthCl);\nvar HTMLTagToRawInlineStyleMap = Map({\n  b: 'BOLD',\n  code: 'CODE',\n  del: 'STRIKETHROUGH',\n  em: 'ITALIC',\n  i: 'ITALIC',\n  s: 'STRIKETHROUGH',\n  strike: 'STRIKETHROUGH',\n  strong: 'BOLD',\n  u: 'UNDERLINE',\n  mark: 'HIGHLIGHT'\n});\n\n/**\n * Build a mapping from HTML tags to draftjs block types\n * out of a BlockRenderMap.\n *\n * The BlockTypeMap for the default BlockRenderMap looks like this:\n *   Map({\n *     h1: 'header-one',\n *     h2: 'header-two',\n *     h3: 'header-three',\n *     h4: 'header-four',\n *     h5: 'header-five',\n *     h6: 'header-six',\n *     blockquote: 'blockquote',\n *     figure: 'atomic',\n *     pre: ['code-block'],\n *     div: 'unstyled',\n *     p: 'unstyled',\n *     li: ['ordered-list-item', 'unordered-list-item'],\n *   })\n */\nvar buildBlockTypeMap = function buildBlockTypeMap(blockRenderMap) {\n  var blockTypeMap = {};\n  blockRenderMap.mapKeys(function (blockType, desc) {\n    var elements = [desc.element];\n\n    if (desc.aliasedElements !== undefined) {\n      elements.push.apply(elements, desc.aliasedElements);\n    }\n\n    elements.forEach(function (element) {\n      if (blockTypeMap[element] === undefined) {\n        blockTypeMap[element] = blockType;\n      } else if (typeof blockTypeMap[element] === 'string') {\n        blockTypeMap[element] = [blockTypeMap[element], blockType];\n      } else {\n        blockTypeMap[element].push(blockType);\n      }\n    });\n  });\n  return Map(blockTypeMap);\n};\n\nvar detectInlineStyle = function detectInlineStyle(node) {\n  if (isHTMLElement(node)) {\n    var element = node; // Currently only used to detect preformatted inline code\n\n    if (element.style.fontFamily.includes('monospace')) {\n      return 'CODE';\n    }\n  }\n\n  return null;\n};\n/**\n * If we're pasting from one DraftEditor to another we can check to see if\n * existing list item depth classes are being used and preserve this style\n */\n\n\nvar getListItemDepth = function getListItemDepth(node) {\n  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  Object.keys(knownListItemDepthClasses).some(function (depthClass) {\n    if (node.classList.contains(depthClass)) {\n      depth = knownListItemDepthClasses[depthClass];\n    }\n  });\n  return depth;\n};\n/**\n * Return true if the provided HTML Element can be used to build a\n * Draftjs-compatible link.\n */\n\n\nvar isValidAnchor = function isValidAnchor(node) {\n  if (!isHTMLAnchorElement(node)) {\n    return false;\n  }\n\n  var anchorNode = node;\n\n  if (!anchorNode.href || anchorNode.protocol !== 'http:' && anchorNode.protocol !== 'https:' && anchorNode.protocol !== 'mailto:' && anchorNode.protocol !== 'tel:') {\n    return false;\n  }\n\n  try {\n    // Just checking whether we can actually create a URI\n    var _ = new URI(anchorNode.href);\n\n    return true; // We need our catch statements to have arguments, else\n    // UglifyJS (which we use for our OSS builds) will crash.\n    // eslint-disable-next-line fb-www/no-unused-catch-bindings\n  } catch (_) {\n    return false;\n  }\n};\n/**\n * Return true if the provided HTML Element can be used to build a\n * Draftjs-compatible image.\n */\n\n\nvar isValidImage = function isValidImage(node) {\n  if (!isHTMLImageElement(node)) {\n    return false;\n  }\n\n  var imageNode = node;\n  return !!(imageNode.attributes.getNamedItem('src') && imageNode.attributes.getNamedItem('src').value);\n};\n/**\n * Try to guess the inline style of an HTML element based on its css\n * styles (font-weight, font-style and text-decoration).\n */\n\n\nvar styleFromNodeAttributes = function styleFromNodeAttributes(node, style) {\n  if (!isHTMLElement(node)) {\n    return style;\n  }\n\n  var htmlElement = node;\n  var fontWeight = htmlElement.style.fontWeight;\n  var fontStyle = htmlElement.style.fontStyle;\n  var textDecoration = htmlElement.style.textDecoration;\n  return style.withMutations(function (style) {\n    if (boldValues.indexOf(fontWeight) >= 0) {\n      style.add('BOLD');\n    } else if (notBoldValues.indexOf(fontWeight) >= 0) {\n      style.remove('BOLD');\n    }\n\n    if (fontStyle === 'italic') {\n      style.add('ITALIC');\n    } else if (fontStyle === 'normal') {\n      style.remove('ITALIC');\n    }\n\n    if (textDecoration === 'underline') {\n      style.add('UNDERLINE');\n    }\n\n    if (textDecoration === 'line-through') {\n      style.add('STRIKETHROUGH');\n    }\n\n    if (textDecoration === 'none') {\n      style.remove('UNDERLINE');\n      style.remove('STRIKETHROUGH');\n    }\n  });\n};\n/**\n * Determine if a nodeName is a list type, 'ul' or 'ol'\n */\n\n\nvar isListNode = function isListNode(nodeName) {\n  return nodeName === 'ul' || nodeName === 'ol';\n};\n/**\n *  ContentBlockConfig is a mutable data structure that holds all\n *  the information required to build a ContentBlock and an array of\n *  all the child nodes (childConfigs).\n *  It is being used a temporary data structure by the\n *  ContentBlocksBuilder class.\n */\n\n\n/**\n * ContentBlocksBuilder builds a list of ContentBlocks and an Entity Map\n * out of one (or several) HTMLElement(s).\n *\n * The algorithm has two passes: first it builds a tree of ContentBlockConfigs\n * by walking through the HTML nodes and their children, then it walks the\n * ContentBlockConfigs tree to compute parents/siblings and create\n * the actual ContentBlocks.\n *\n * Typical usage is:\n *     new ContentBlocksBuilder()\n *        .addDOMNode(someHTMLNode)\n *        .addDOMNode(someOtherHTMLNode)\n *       .getContentBlocks();\n *\n */\nvar ContentBlocksBuilder = /*#__PURE__*/function () {\n  // Most of the method in the class depend on the state of the content builder\n  // (i.e. currentBlockType, currentDepth, currentEntity etc.). Though it may\n  // be confusing at first, it made the code simpler than the alternative which\n  // is to pass those values around in every call.\n  // The following attributes are used to accumulate text and styles\n  // as we are walking the HTML node tree.\n  // Describes the future ContentState as a tree of content blocks\n  // The content blocks generated from the blockConfigs\n  // Entity map use to store links and images found in the HTML nodes\n  // Map HTML tags to draftjs block types and disambiguation function\n  function ContentBlocksBuilder(blockTypeMap, disambiguate) {\n    _defineProperty(this, \"characterList\", List());\n\n    _defineProperty(this, \"currentBlockType\", 'unstyled');\n\n    _defineProperty(this, \"currentDepth\", 0);\n\n    _defineProperty(this, \"currentEntity\", null);\n\n    _defineProperty(this, \"currentText\", '');\n\n    _defineProperty(this, \"wrapper\", null);\n\n    _defineProperty(this, \"blockConfigs\", []);\n\n    _defineProperty(this, \"contentBlocks\", []);\n\n    _defineProperty(this, \"entityMap\", DraftEntity);\n\n    _defineProperty(this, \"blockTypeMap\", void 0);\n\n    _defineProperty(this, \"disambiguate\", void 0);\n\n    this.clear();\n    this.blockTypeMap = blockTypeMap;\n    this.disambiguate = disambiguate;\n  }\n  /**\n   * Clear the internal state of the ContentBlocksBuilder\n   */\n\n\n  var _proto = ContentBlocksBuilder.prototype;\n\n  _proto.clear = function clear() {\n    this.characterList = List();\n    this.blockConfigs = [];\n    this.currentBlockType = 'unstyled';\n    this.currentDepth = 0;\n    this.currentEntity = null;\n    this.currentText = '';\n    this.entityMap = DraftEntity;\n    this.wrapper = null;\n    this.contentBlocks = [];\n  }\n  /**\n   * Add an HTMLElement to the ContentBlocksBuilder\n   */\n  ;\n\n  _proto.addDOMNode = function addDOMNode(node) {\n    var _this$blockConfigs;\n\n    this.contentBlocks = [];\n    this.currentDepth = 0; // Converts the HTML node to block config\n\n    (_this$blockConfigs = this.blockConfigs).push.apply(_this$blockConfigs, this._toBlockConfigs([node], OrderedSet())); // There might be some left over text in the builder's\n    // internal state, if so make a ContentBlock out of it.\n\n\n    this._trimCurrentText();\n\n    if (this.currentText !== '') {\n      this.blockConfigs.push(this._makeBlockConfig());\n    } // for chaining\n\n\n    return this;\n  }\n  /**\n   * Return the ContentBlocks and the EntityMap that corresponds\n   * to the previously added HTML nodes.\n   */\n  ;\n\n  _proto.getContentBlocks = function getContentBlocks() {\n    if (this.contentBlocks.length === 0) {\n      if (experimentalTreeDataSupport) {\n        this._toContentBlocks(this.blockConfigs);\n      } else {\n        this._toFlatContentBlocks(this.blockConfigs);\n      }\n    }\n\n    return {\n      contentBlocks: this.contentBlocks,\n      entityMap: this.entityMap\n    };\n  } // ***********************************WARNING******************************\n  // The methods below this line are private - don't call them directly.\n\n  /**\n   * Generate a new ContentBlockConfig out of the current internal state\n   * of the builder, then clears the internal state.\n   */\n  ;\n\n  _proto._makeBlockConfig = function _makeBlockConfig() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var key = config.key || generateRandomKey();\n\n    var block = _objectSpread({\n      key: key,\n      type: this.currentBlockType,\n      text: this.currentText,\n      characterList: this.characterList,\n      depth: this.currentDepth,\n      parent: null,\n      children: List(),\n      prevSibling: null,\n      nextSibling: null,\n      childConfigs: []\n    }, config);\n\n    this.characterList = List();\n    this.currentBlockType = 'unstyled';\n    this.currentText = '';\n    return block;\n  }\n  /**\n   * Converts an array of HTML elements to a multi-root tree of content\n   * block configs. Some text content may be left in the builders internal\n   * state to enable chaining sucessive calls.\n   */\n  ;\n\n  _proto._toBlockConfigs = function _toBlockConfigs(nodes, style) {\n    var blockConfigs = [];\n\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var nodeName = node.nodeName.toLowerCase();\n\n      if (nodeName === 'body' || isListNode(nodeName)) {\n        // body, ol and ul are 'block' type nodes so create a block config\n        // with the text accumulated so far (if any)\n        this._trimCurrentText();\n\n        if (this.currentText !== '') {\n          blockConfigs.push(this._makeBlockConfig());\n        } // body, ol and ul nodes are ignored, but their children are inlined in\n        // the parent block config.\n\n\n        var wasCurrentDepth = this.currentDepth;\n        var wasWrapper = this.wrapper;\n\n        if (isListNode(nodeName)) {\n          this.wrapper = nodeName;\n\n          if (isListNode(wasWrapper)) {\n            this.currentDepth++;\n          }\n        }\n\n        blockConfigs.push.apply(blockConfigs, this._toBlockConfigs(Array.from(node.childNodes), style));\n        this.currentDepth = wasCurrentDepth;\n        this.wrapper = wasWrapper;\n        continue;\n      }\n\n      var blockType = this.blockTypeMap.get(nodeName);\n\n      if (blockType !== undefined) {\n        // 'block' type node means we need to create a block config\n        // with the text accumulated so far (if any)\n        this._trimCurrentText();\n\n        if (this.currentText !== '') {\n          blockConfigs.push(this._makeBlockConfig());\n        }\n\n        var _wasCurrentDepth = this.currentDepth;\n        var _wasWrapper = this.wrapper;\n        this.wrapper = nodeName === 'pre' ? 'pre' : this.wrapper;\n\n        if (typeof blockType !== 'string') {\n          blockType = this.disambiguate(nodeName, this.wrapper) || blockType[0] || 'unstyled';\n        }\n\n        if (!experimentalTreeDataSupport && isHTMLElement(node) && (blockType === 'unordered-list-item' || blockType === 'ordered-list-item')) {\n          var htmlElement = node;\n          this.currentDepth = getListItemDepth(htmlElement, this.currentDepth);\n        }\n\n        var key = generateRandomKey();\n\n        var childConfigs = this._toBlockConfigs(Array.from(node.childNodes), style);\n\n        this._trimCurrentText();\n\n        blockConfigs.push(this._makeBlockConfig({\n          key: key,\n          childConfigs: childConfigs,\n          type: blockType\n        }));\n        this.currentDepth = _wasCurrentDepth;\n        this.wrapper = _wasWrapper;\n        continue;\n      }\n\n      if (nodeName === '#text') {\n        this._addTextNode(node, style);\n\n        continue;\n      }\n\n      if (nodeName === 'br') {\n        this._addBreakNode(node, style);\n\n        continue;\n      }\n\n      if (isValidImage(node)) {\n        this._addImgNode(node, style);\n\n        continue;\n      }\n\n      if (isValidAnchor(node)) {\n        this._addAnchorNode(node, blockConfigs, style);\n\n        continue;\n      }\n\n      var newStyle = style;\n\n      if (HTMLTagToRawInlineStyleMap.has(nodeName)) {\n        newStyle = newStyle.add(HTMLTagToRawInlineStyleMap.get(nodeName));\n      }\n\n      newStyle = styleFromNodeAttributes(node, newStyle);\n      var inlineStyle = detectInlineStyle(node);\n\n      if (inlineStyle != null) {\n        newStyle = newStyle.add(inlineStyle);\n      }\n\n      blockConfigs.push.apply(blockConfigs, this._toBlockConfigs(Array.from(node.childNodes), newStyle));\n    }\n\n    return blockConfigs;\n  }\n  /**\n   * Append a string of text to the internal buffer.\n   */\n  ;\n\n  _proto._appendText = function _appendText(text, style) {\n    var _this$characterList;\n\n    this.currentText += text;\n    var characterMetadata = CharacterMetadata.create({\n      style: style,\n      entity: this.currentEntity\n    });\n    this.characterList = (_this$characterList = this.characterList).push.apply(_this$characterList, Array(text.length).fill(characterMetadata));\n  }\n  /**\n   * Trim the text in the internal buffer.\n   */\n  ;\n\n  _proto._trimCurrentText = function _trimCurrentText() {\n    var l = this.currentText.length;\n    var begin = l - this.currentText.trimLeft().length;\n    var end = this.currentText.trimRight().length; // We should not trim whitespaces for which an entity is defined.\n\n    var entity = this.characterList.findEntry(function (characterMetadata) {\n      return characterMetadata.getEntity() !== null;\n    });\n    begin = entity !== undefined ? Math.min(begin, entity[0]) : begin;\n    entity = this.characterList.reverse().findEntry(function (characterMetadata) {\n      return characterMetadata.getEntity() !== null;\n    });\n    end = entity !== undefined ? Math.max(end, l - entity[0]) : end;\n\n    if (begin > end) {\n      this.currentText = '';\n      this.characterList = List();\n    } else {\n      this.currentText = this.currentText.slice(begin, end);\n      this.characterList = this.characterList.slice(begin, end);\n    }\n  }\n  /**\n   * Add the content of an HTML text node to the internal state\n   */\n  ;\n\n  _proto._addTextNode = function _addTextNode(node, style) {\n    var text = node.textContent;\n    var trimmedText = text.trim(); // If we are not in a pre block and the trimmed content is empty,\n    // normalize to a single space.\n\n    if (trimmedText === '' && this.wrapper !== 'pre') {\n      text = ' ';\n    }\n\n    if (this.wrapper !== 'pre') {\n      // Trim leading line feed, which is invisible in HTML\n      text = text.replace(REGEX_LEADING_LF, ''); // Can't use empty string because MSWord\n\n      text = text.replace(REGEX_LF, SPACE);\n    }\n\n    this._appendText(text, style);\n  };\n\n  _proto._addBreakNode = function _addBreakNode(node, style) {\n    if (!isHTMLBRElement(node)) {\n      return;\n    }\n\n    this._appendText('\\n', style);\n  }\n  /**\n   * Add the content of an HTML img node to the internal state\n   */\n  ;\n\n  _proto._addImgNode = function _addImgNode(node, style) {\n    if (!isHTMLImageElement(node)) {\n      return;\n    }\n\n    var image = node;\n    var entityConfig = {};\n    imgAttr.forEach(function (attr) {\n      var imageAttribute = image.getAttribute(attr);\n\n      if (imageAttribute) {\n        entityConfig[attr] = imageAttribute;\n      }\n    }); // TODO: T15530363 update this when we remove DraftEntity entirely\n\n    this.currentEntity = this.entityMap.__create('IMAGE', 'IMMUTABLE', entityConfig); // The child text node cannot just have a space or return as content (since\n    // we strip those out), unless the image is for presentation only.\n    // See https://github.com/facebook/draft-js/issues/231 for some context.\n\n    if (gkx('draftjs_fix_paste_for_img')) {\n      if (image.getAttribute('role') !== 'presentation') {\n        this._appendText(\"\\uD83D\\uDCF7\", style);\n      }\n    } else {\n      this._appendText(\"\\uD83D\\uDCF7\", style);\n    }\n\n    this.currentEntity = null;\n  }\n  /**\n   * Add the content of an HTML 'a' node to the internal state. Child nodes\n   * (if any) are converted to Block Configs and appended to the provided\n   * blockConfig array.\n   */\n  ;\n\n  _proto._addAnchorNode = function _addAnchorNode(node, blockConfigs, style) {\n    // The check has already been made by isValidAnchor but\n    // we have to do it again to keep flow happy.\n    if (!isHTMLAnchorElement(node)) {\n      return;\n    }\n\n    var anchor = node;\n    var entityConfig = {};\n    anchorAttr.forEach(function (attr) {\n      var anchorAttribute = anchor.getAttribute(attr);\n\n      if (anchorAttribute) {\n        entityConfig[attr] = anchorAttribute;\n      }\n    });\n    entityConfig.url = new URI(anchor.href).toString(); // TODO: T15530363 update this when we remove DraftEntity completely\n\n    this.currentEntity = this.entityMap.__create('LINK', 'MUTABLE', entityConfig || {});\n    blockConfigs.push.apply(blockConfigs, this._toBlockConfigs(Array.from(node.childNodes), style));\n    this.currentEntity = null;\n  }\n  /**\n   * Walk the BlockConfig tree, compute parent/children/siblings,\n   * and generate the corresponding ContentBlockNode\n   */\n  ;\n\n  _proto._toContentBlocks = function _toContentBlocks(blockConfigs) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var l = blockConfigs.length - 1;\n\n    for (var i = 0; i <= l; i++) {\n      var config = blockConfigs[i];\n      config.parent = parent;\n      config.prevSibling = i > 0 ? blockConfigs[i - 1].key : null;\n      config.nextSibling = i < l ? blockConfigs[i + 1].key : null;\n      config.children = List(config.childConfigs.map(function (child) {\n        return child.key;\n      }));\n      this.contentBlocks.push(new ContentBlockNode(_objectSpread({}, config)));\n\n      this._toContentBlocks(config.childConfigs, config.key);\n    }\n  }\n  /**\n   * Remove 'useless' container nodes from the block config hierarchy, by\n   * replacing them with their children.\n   */\n  ;\n\n  _proto._hoistContainersInBlockConfigs = function _hoistContainersInBlockConfigs(blockConfigs) {\n    var _this = this;\n\n    var hoisted = List(blockConfigs).flatMap(function (blockConfig) {\n      // Don't mess with useful blocks\n      if (blockConfig.type !== 'unstyled' || blockConfig.text !== '') {\n        return [blockConfig];\n      }\n\n      return _this._hoistContainersInBlockConfigs(blockConfig.childConfigs);\n    });\n    return hoisted;\n  } // ***********************************************************************\n  // The two methods below are used for backward compatibility when\n  // experimentalTreeDataSupport is disabled.\n\n  /**\n   * Same as _toContentBlocks but replaces nested blocks by their\n   * text content.\n   */\n  ;\n\n  _proto._toFlatContentBlocks = function _toFlatContentBlocks(blockConfigs) {\n    var _this2 = this;\n\n    var cleanConfigs = this._hoistContainersInBlockConfigs(blockConfigs);\n\n    cleanConfigs.forEach(function (config) {\n      var _this2$_extractTextFr = _this2._extractTextFromBlockConfigs(config.childConfigs),\n          text = _this2$_extractTextFr.text,\n          characterList = _this2$_extractTextFr.characterList;\n\n      _this2.contentBlocks.push(new ContentBlock(_objectSpread({}, config, {\n        text: config.text + text,\n        characterList: config.characterList.concat(characterList)\n      })));\n    });\n  }\n  /**\n   * Extract the text and the associated inline styles form an\n   * array of content block configs.\n   */\n  ;\n\n  _proto._extractTextFromBlockConfigs = function _extractTextFromBlockConfigs(blockConfigs) {\n    var l = blockConfigs.length - 1;\n    var text = '';\n    var characterList = List();\n\n    for (var i = 0; i <= l; i++) {\n      var config = blockConfigs[i];\n      text += config.text;\n      characterList = characterList.concat(config.characterList);\n\n      if (text !== '' && config.type !== 'unstyled') {\n        text += '\\n';\n        characterList = characterList.push(characterList.last());\n      }\n\n      var children = this._extractTextFromBlockConfigs(config.childConfigs);\n\n      text += children.text;\n      characterList = characterList.concat(children.characterList);\n    }\n\n    return {\n      text: text,\n      characterList: characterList\n    };\n  };\n\n  return ContentBlocksBuilder;\n}();\n/**\n * Converts an HTML string to an array of ContentBlocks and an EntityMap\n * suitable to initialize the internal state of a Draftjs component.\n */\n\n\nvar convertFromHTMLToContentBlocks = function convertFromHTMLToContentBlocks(html) {\n  var DOMBuilder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getSafeBodyFromHTML;\n  var blockRenderMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DefaultDraftBlockRenderMap;\n  // Be ABSOLUTELY SURE that the dom builder you pass here won't execute\n  // arbitrary code in whatever environment you're running this in. For an\n  // example of how we try to do this in-browser, see getSafeBodyFromHTML.\n  // Remove funky characters from the HTML string\n  html = html.trim().replace(REGEX_CR, '').replace(REGEX_NBSP, SPACE).replace(REGEX_CARRIAGE, '').replace(REGEX_ZWS, ''); // Build a DOM tree out of the HTML string\n\n  var safeBody = DOMBuilder(html);\n\n  if (!safeBody) {\n    return null;\n  } // Build a BlockTypeMap out of the BlockRenderMap\n\n\n  var blockTypeMap = buildBlockTypeMap(blockRenderMap); // Select the proper block type for the cases where the blockRenderMap\n  // uses multiple block types for the same html tag.\n\n  var disambiguate = function disambiguate(tag, wrapper) {\n    if (tag === 'li') {\n      return wrapper === 'ol' ? 'ordered-list-item' : 'unordered-list-item';\n    }\n\n    return null;\n  };\n\n  return new ContentBlocksBuilder(blockTypeMap, disambiguate).addDOMNode(safeBody).getContentBlocks();\n};\n\nmodule.exports = convertFromHTMLToContentBlocks;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar ContentState = require(\"./ContentState\");\n\nvar DraftEntity = require(\"./DraftEntity\");\n\nvar DraftTreeAdapter = require(\"./DraftTreeAdapter\");\n\nvar DraftTreeInvariants = require(\"./DraftTreeInvariants\");\n\nvar SelectionState = require(\"./SelectionState\");\n\nvar createCharacterList = require(\"./createCharacterList\");\n\nvar decodeEntityRanges = require(\"./decodeEntityRanges\");\n\nvar decodeInlineStyleRanges = require(\"./decodeInlineStyleRanges\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar gkx = require(\"./gkx\");\n\nvar Immutable = require(\"immutable\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar experimentalTreeDataSupport = gkx('draft_tree_data_support');\nvar List = Immutable.List,\n    Map = Immutable.Map,\n    OrderedMap = Immutable.OrderedMap;\n\nvar decodeBlockNodeConfig = function decodeBlockNodeConfig(block, entityMap) {\n  var key = block.key,\n      type = block.type,\n      data = block.data,\n      text = block.text,\n      depth = block.depth;\n  var blockNodeConfig = {\n    text: text,\n    depth: depth || 0,\n    type: type || 'unstyled',\n    key: key || generateRandomKey(),\n    data: Map(data),\n    characterList: decodeCharacterList(block, entityMap)\n  };\n  return blockNodeConfig;\n};\n\nvar decodeCharacterList = function decodeCharacterList(block, entityMap) {\n  var text = block.text,\n      rawEntityRanges = block.entityRanges,\n      rawInlineStyleRanges = block.inlineStyleRanges;\n  var entityRanges = rawEntityRanges || [];\n  var inlineStyleRanges = rawInlineStyleRanges || []; // Translate entity range keys to the DraftEntity map.\n\n  return createCharacterList(decodeInlineStyleRanges(text, inlineStyleRanges), decodeEntityRanges(text, entityRanges.filter(function (range) {\n    return entityMap.hasOwnProperty(range.key);\n  }).map(function (range) {\n    return _objectSpread({}, range, {\n      key: entityMap[range.key]\n    });\n  })));\n};\n\nvar addKeyIfMissing = function addKeyIfMissing(block) {\n  return _objectSpread({}, block, {\n    key: block.key || generateRandomKey()\n  });\n};\n/**\n * Node stack is responsible to ensure we traverse the tree only once\n * in depth order, while also providing parent refs to inner nodes to\n * construct their links.\n */\n\n\nvar updateNodeStack = function updateNodeStack(stack, nodes, parentRef) {\n  var nodesWithParentRef = nodes.map(function (block) {\n    return _objectSpread({}, block, {\n      parentRef: parentRef\n    });\n  }); // since we pop nodes from the stack we need to insert them in reverse\n\n  return stack.concat(nodesWithParentRef.reverse());\n};\n/**\n * This will build a tree draft content state by creating the node\n * reference links into a single tree walk. Each node has a link\n * reference to \"parent\", \"children\", \"nextSibling\" and \"prevSibling\"\n * blockMap will be created using depth ordering.\n */\n\n\nvar decodeContentBlockNodes = function decodeContentBlockNodes(blocks, entityMap) {\n  return blocks // ensure children have valid keys to enable sibling links\n  .map(addKeyIfMissing).reduce(function (blockMap, block, index) {\n    !Array.isArray(block.children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'invalid RawDraftContentBlock can not be converted to ContentBlockNode') : invariant(false) : void 0; // ensure children have valid keys to enable sibling links\n\n    var children = block.children.map(addKeyIfMissing); // root level nodes\n\n    var contentBlockNode = new ContentBlockNode(_objectSpread({}, decodeBlockNodeConfig(block, entityMap), {\n      prevSibling: index === 0 ? null : blocks[index - 1].key,\n      nextSibling: index === blocks.length - 1 ? null : blocks[index + 1].key,\n      children: List(children.map(function (child) {\n        return child.key;\n      }))\n    })); // push root node to blockMap\n\n    blockMap = blockMap.set(contentBlockNode.getKey(), contentBlockNode); // this stack is used to ensure we visit all nodes respecting depth ordering\n\n    var stack = updateNodeStack([], children, contentBlockNode); // start computing children nodes\n\n    while (stack.length > 0) {\n      // we pop from the stack and start processing this node\n      var node = stack.pop(); // parentRef already points to a converted ContentBlockNode\n\n      var parentRef = node.parentRef;\n      var siblings = parentRef.getChildKeys();\n\n      var _index = siblings.indexOf(node.key);\n\n      var isValidBlock = Array.isArray(node.children);\n\n      if (!isValidBlock) {\n        !isValidBlock ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'invalid RawDraftContentBlock can not be converted to ContentBlockNode') : invariant(false) : void 0;\n        break;\n      } // ensure children have valid keys to enable sibling links\n\n\n      var _children = node.children.map(addKeyIfMissing);\n\n      var _contentBlockNode = new ContentBlockNode(_objectSpread({}, decodeBlockNodeConfig(node, entityMap), {\n        parent: parentRef.getKey(),\n        children: List(_children.map(function (child) {\n          return child.key;\n        })),\n        prevSibling: _index === 0 ? null : siblings.get(_index - 1),\n        nextSibling: _index === siblings.size - 1 ? null : siblings.get(_index + 1)\n      })); // push node to blockMap\n\n\n      blockMap = blockMap.set(_contentBlockNode.getKey(), _contentBlockNode); // this stack is used to ensure we visit all nodes respecting depth ordering\n\n      stack = updateNodeStack(stack, _children, _contentBlockNode);\n    }\n\n    return blockMap;\n  }, OrderedMap());\n};\n\nvar decodeContentBlocks = function decodeContentBlocks(blocks, entityMap) {\n  return OrderedMap(blocks.map(function (block) {\n    var contentBlock = new ContentBlock(decodeBlockNodeConfig(block, entityMap));\n    return [contentBlock.getKey(), contentBlock];\n  }));\n};\n\nvar decodeRawBlocks = function decodeRawBlocks(rawState, entityMap) {\n  var isTreeRawBlock = rawState.blocks.find(function (block) {\n    return Array.isArray(block.children) && block.children.length > 0;\n  });\n  var rawBlocks = experimentalTreeDataSupport && !isTreeRawBlock ? DraftTreeAdapter.fromRawStateToRawTreeState(rawState).blocks : rawState.blocks;\n\n  if (!experimentalTreeDataSupport) {\n    return decodeContentBlocks(isTreeRawBlock ? DraftTreeAdapter.fromRawTreeStateToRawState(rawState).blocks : rawBlocks, entityMap);\n  }\n\n  var blockMap = decodeContentBlockNodes(rawBlocks, entityMap); // in dev mode, check that the tree invariants are met\n\n  if (process.env.NODE_ENV !== \"production\") {\n    !DraftTreeInvariants.isValidTree(blockMap) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Should be a valid tree') : invariant(false) : void 0;\n  }\n\n  return blockMap;\n};\n\nvar decodeRawEntityMap = function decodeRawEntityMap(rawState) {\n  var rawEntityMap = rawState.entityMap;\n  var entityMap = {}; // TODO: Update this once we completely remove DraftEntity\n\n  Object.keys(rawEntityMap).forEach(function (rawEntityKey) {\n    var _rawEntityMap$rawEnti = rawEntityMap[rawEntityKey],\n        type = _rawEntityMap$rawEnti.type,\n        mutability = _rawEntityMap$rawEnti.mutability,\n        data = _rawEntityMap$rawEnti.data; // get the key reference to created entity\n\n    entityMap[rawEntityKey] = DraftEntity.__create(type, mutability, data || {});\n  });\n  return entityMap;\n};\n\nvar convertFromRawToDraftState = function convertFromRawToDraftState(rawState) {\n  !Array.isArray(rawState.blocks) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'invalid RawDraftContentState') : invariant(false) : void 0; // decode entities\n\n  var entityMap = decodeRawEntityMap(rawState); // decode blockMap\n\n  var blockMap = decodeRawBlocks(rawState, entityMap); // create initial selection\n\n  var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n  return new ContentState({\n    blockMap: blockMap,\n    entityMap: entityMap,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n};\n\nmodule.exports = convertFromRawToDraftState;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar CharacterMetadata = require(\"./CharacterMetadata\");\n\nvar Immutable = require(\"immutable\");\n\nvar List = Immutable.List;\n\nfunction createCharacterList(inlineStyles, entities) {\n  var characterArray = inlineStyles.map(function (style, ii) {\n    var entity = entities[ii];\n    return CharacterMetadata.create({\n      style: style,\n      entity: entity\n    });\n  });\n  return List(characterArray);\n}\n\nmodule.exports = createCharacterList;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UnicodeUtils = require(\"fbjs/lib/UnicodeUtils\");\n\nvar substr = UnicodeUtils.substr;\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\n\nfunction decodeEntityRanges(text, ranges) {\n  var entities = Array(text.length).fill(null);\n\n  if (ranges) {\n    ranges.forEach(function (range) {\n      // Using Unicode-enabled substrings converted to JavaScript lengths,\n      // fill the output array with entity keys.\n      var start = substr(text, 0, range.offset).length;\n      var end = start + substr(text, range.offset, range.length).length;\n\n      for (var ii = start; ii < end; ii++) {\n        entities[ii] = range.key;\n      }\n    });\n  }\n\n  return entities;\n}\n\nmodule.exports = decodeEntityRanges;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UnicodeUtils = require(\"fbjs/lib/UnicodeUtils\");\n\nvar _require = require(\"immutable\"),\n    OrderedSet = _require.OrderedSet;\n\nvar substr = UnicodeUtils.substr;\nvar EMPTY_SET = OrderedSet();\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\n\nfunction decodeInlineStyleRanges(text, ranges) {\n  var styles = Array(text.length).fill(EMPTY_SET);\n\n  if (ranges) {\n    ranges.forEach(function (range) {\n      var cursor = substr(text, 0, range.offset).length;\n      var end = cursor + substr(text, range.offset, range.length).length;\n\n      while (cursor < end) {\n        styles[cursor] = styles[cursor].add(range.style);\n        cursor++;\n      }\n    });\n  }\n\n  return styles;\n}\n\nmodule.exports = decodeInlineStyleRanges;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Provides utilities for handling draftjs keys.\n *\n * @emails oncall+draft_js\n * \n * @format\n */\n'use strict';\n\nfunction notEmptyKey(key) {\n  return key != null && key != '';\n}\n\nmodule.exports = {\n  notEmptyKey: notEmptyKey\n};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar getEntityKeyForSelection = require(\"./getEntityKeyForSelection\");\n\nvar isEventHandled = require(\"./isEventHandled\");\n\nvar isSelectionAtLeafStart = require(\"./isSelectionAtLeafStart\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar setImmediate = require(\"fbjs/lib/setImmediate\"); // When nothing is focused, Firefox regards two characters, `'` and `/`, as\n// commands that should open and focus the \"quickfind\" search bar. This should\n// *never* happen while a contenteditable is focused, but as of v28, it\n// sometimes does, even when the keypress event target is the contenteditable.\n// This breaks the input. Special case these characters to ensure that when\n// they are typed, we prevent default on the event to make sure not to\n// trigger quickfind.\n\n\nvar FF_QUICKFIND_CHAR = \"'\";\nvar FF_QUICKFIND_LINK_CHAR = '/';\nvar isFirefox = UserAgent.isBrowser('Firefox');\n\nfunction mustPreventDefaultForCharacter(character) {\n  return isFirefox && (character == FF_QUICKFIND_CHAR || character == FF_QUICKFIND_LINK_CHAR);\n}\n/**\n * Replace the current selection with the specified text string, with the\n * inline style and entity key applied to the newly inserted text.\n */\n\n\nfunction replaceText(editorState, text, inlineStyle, entityKey, forceSelection) {\n  var contentState = DraftModifier.replaceText(editorState.getCurrentContent(), editorState.getSelection(), text, inlineStyle, entityKey);\n  return EditorState.push(editorState, contentState, 'insert-characters', forceSelection);\n}\n/**\n * When `onBeforeInput` executes, the browser is attempting to insert a\n * character into the editor. Apply this character data to the document,\n * allowing native insertion if possible.\n *\n * Native insertion is encouraged in order to limit re-rendering and to\n * preserve spellcheck highlighting, which disappears or flashes if re-render\n * occurs on the relevant text nodes.\n */\n\n\nfunction editOnBeforeInput(editor, e) {\n  if (editor._pendingStateFromBeforeInput !== undefined) {\n    editor.update(editor._pendingStateFromBeforeInput);\n    editor._pendingStateFromBeforeInput = undefined;\n  }\n\n  var editorState = editor._latestEditorState;\n  var chars = e.data; // In some cases (ex: IE ideographic space insertion) no character data\n  // is provided. There's nothing to do when this happens.\n\n  if (!chars) {\n    return;\n  } // Allow the top-level component to handle the insertion manually. This is\n  // useful when triggering interesting behaviors for a character insertion,\n  // Simple examples: replacing a raw text ':)' with a smile emoji or image\n  // decorator, or setting a block to be a list item after typing '- ' at the\n  // start of the block.\n\n\n  if (editor.props.handleBeforeInput && isEventHandled(editor.props.handleBeforeInput(chars, editorState, e.timeStamp))) {\n    e.preventDefault();\n    return;\n  } // If selection is collapsed, conditionally allow native behavior. This\n  // reduces re-renders and preserves spellcheck highlighting. If the selection\n  // is not collapsed, we will re-render.\n\n\n  var selection = editorState.getSelection();\n  var selectionStart = selection.getStartOffset();\n  var anchorKey = selection.getAnchorKey();\n\n  if (!selection.isCollapsed()) {\n    e.preventDefault();\n    editor.update(replaceText(editorState, chars, editorState.getCurrentInlineStyle(), getEntityKeyForSelection(editorState.getCurrentContent(), editorState.getSelection()), true));\n    return;\n  }\n\n  var newEditorState = replaceText(editorState, chars, editorState.getCurrentInlineStyle(), getEntityKeyForSelection(editorState.getCurrentContent(), editorState.getSelection()), false); // Bunch of different cases follow where we need to prevent native insertion.\n\n  var mustPreventNative = false;\n\n  if (!mustPreventNative) {\n    // Browsers tend to insert text in weird places in the DOM when typing at\n    // the start of a leaf, so we'll handle it ourselves.\n    mustPreventNative = isSelectionAtLeafStart(editor._latestCommittedEditorState);\n  }\n\n  if (!mustPreventNative) {\n    // Let's say we have a decorator that highlights hashtags. In many cases\n    // we need to prevent native behavior and rerender ourselves --\n    // particularly, any case *except* where the inserted characters end up\n    // anywhere except exactly where you put them.\n    //\n    // Using [] to denote a decorated leaf, some examples:\n    //\n    // 1. 'hi #' and append 'f'\n    // desired rendering: 'hi [#f]'\n    // native rendering would be: 'hi #f' (incorrect)\n    //\n    // 2. 'x [#foo]' and insert '#' before 'f'\n    // desired rendering: 'x #[#foo]'\n    // native rendering would be: 'x [##foo]' (incorrect)\n    //\n    // 3. '[#foobar]' and insert ' ' between 'foo' and 'bar'\n    // desired rendering: '[#foo] bar'\n    // native rendering would be: '[#foo bar]' (incorrect)\n    //\n    // 4. '[#foo]' and delete '#' [won't use this beforeinput codepath though]\n    // desired rendering: 'foo'\n    // native rendering would be: '[foo]' (incorrect)\n    //\n    // 5. '[#foo]' and append 'b'\n    // desired rendering: '[#foob]'\n    // native rendering would be: '[#foob]'\n    // (native insertion here would be ok for decorators like simple spans,\n    // but not more complex decorators. To be safe, we need to prevent it.)\n    //\n    // It is safe to allow native insertion if and only if the full list of\n    // decorator ranges matches what we expect native insertion to give, and\n    // the range lengths have not changed. We don't need to compare the content\n    // because the only possible mutation to consider here is inserting plain\n    // text and decorators can't affect text content.\n    var oldBlockTree = editorState.getBlockTree(anchorKey);\n    var newBlockTree = newEditorState.getBlockTree(anchorKey);\n    mustPreventNative = oldBlockTree.size !== newBlockTree.size || oldBlockTree.zip(newBlockTree).some(function (_ref) {\n      var oldLeafSet = _ref[0],\n          newLeafSet = _ref[1];\n      // selectionStart is guaranteed to be selectionEnd here\n      var oldStart = oldLeafSet.get('start');\n      var adjustedStart = oldStart + (oldStart >= selectionStart ? chars.length : 0);\n      var oldEnd = oldLeafSet.get('end');\n      var adjustedEnd = oldEnd + (oldEnd >= selectionStart ? chars.length : 0);\n      var newStart = newLeafSet.get('start');\n      var newEnd = newLeafSet.get('end');\n      var newDecoratorKey = newLeafSet.get('decoratorKey');\n      return (// Different decorators\n        oldLeafSet.get('decoratorKey') !== newDecoratorKey || // Different number of inline styles\n        oldLeafSet.get('leaves').size !== newLeafSet.get('leaves').size || // Different effective decorator position\n        adjustedStart !== newStart || adjustedEnd !== newEnd || // Decorator already existed and its length changed\n        newDecoratorKey != null && newEnd - newStart !== oldEnd - oldStart\n      );\n    });\n  }\n\n  if (!mustPreventNative) {\n    mustPreventNative = mustPreventDefaultForCharacter(chars);\n  }\n\n  if (!mustPreventNative) {\n    mustPreventNative = nullthrows(newEditorState.getDirectionMap()).get(anchorKey) !== nullthrows(editorState.getDirectionMap()).get(anchorKey);\n  }\n\n  if (mustPreventNative) {\n    e.preventDefault();\n    newEditorState = EditorState.set(newEditorState, {\n      forceSelection: true\n    });\n    editor.update(newEditorState);\n    return;\n  } // We made it all the way! Let the browser do its thing and insert the char.\n\n\n  newEditorState = EditorState.set(newEditorState, {\n    nativelyRenderedContent: newEditorState.getCurrentContent()\n  }); // The native event is allowed to occur. To allow user onChange handlers to\n  // change the inserted text, we wait until the text is actually inserted\n  // before we actually update our state. That way when we rerender, the text\n  // we see in the DOM will already have been inserted properly.\n\n  editor._pendingStateFromBeforeInput = newEditorState;\n  setImmediate(function () {\n    if (editor._pendingStateFromBeforeInput !== undefined) {\n      editor.update(editor._pendingStateFromBeforeInput);\n      editor._pendingStateFromBeforeInput = undefined;\n    }\n  });\n}\n\nmodule.exports = editOnBeforeInput;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar EditorState = require(\"./EditorState\");\n\nvar containsNode = require(\"fbjs/lib/containsNode\");\n\nvar getActiveElement = require(\"fbjs/lib/getActiveElement\");\n\nfunction editOnBlur(editor, e) {\n  // In a contentEditable element, when you select a range and then click\n  // another active element, this does trigger a `blur` event but will not\n  // remove the DOM selection from the contenteditable.\n  // This is consistent across all browsers, but we prefer that the editor\n  // behave like a textarea, where a `blur` event clears the DOM selection.\n  // We therefore force the issue to be certain, checking whether the active\n  // element is `body` to force it when blurring occurs within the window (as\n  // opposed to clicking to another tab or window).\n  var ownerDocument = e.currentTarget.ownerDocument;\n\n  if ( // This ESLint rule conflicts with `sketchy-null-bool` flow check\n  // eslint-disable-next-line no-extra-boolean-cast\n  !Boolean(editor.props.preserveSelectionOnBlur) && getActiveElement(ownerDocument) === ownerDocument.body) {\n    var _selection = ownerDocument.defaultView.getSelection();\n\n    var editorNode = editor.editor;\n\n    if (_selection.rangeCount === 1 && containsNode(editorNode, _selection.anchorNode) && containsNode(editorNode, _selection.focusNode)) {\n      _selection.removeAllRanges();\n    }\n  }\n\n  var editorState = editor._latestEditorState;\n  var currentSelection = editorState.getSelection();\n\n  if (!currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', false);\n  editor.props.onBlur && editor.props.onBlur(e);\n  editor.update(EditorState.acceptSelection(editorState, selection));\n}\n\nmodule.exports = editOnBlur;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar EditorState = require(\"./EditorState\");\n/**\n * The user has begun using an IME input system. Switching to `composite` mode\n * allows handling composition input and disables other edit behavior.\n */\n\n\nfunction editOnCompositionStart(editor, e) {\n  editor.setMode('composite');\n  editor.update(EditorState.set(editor._latestEditorState, {\n    inCompositionMode: true\n  })); // Allow composition handler to interpret the compositionstart event\n\n  editor._onCompositionStart(e);\n}\n\nmodule.exports = editOnCompositionStart;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar getFragmentFromSelection = require(\"./getFragmentFromSelection\");\n/**\n * If we have a selection, create a ContentState fragment and store\n * it in our internal clipboard. Subsequent paste events will use this\n * fragment if no external clipboard data is supplied.\n */\n\n\nfunction editOnCopy(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection(); // No selection, so there's nothing to copy.\n\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  }\n\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\n}\n\nmodule.exports = editOnCopy;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar Style = require(\"fbjs/lib/Style\");\n\nvar getFragmentFromSelection = require(\"./getFragmentFromSelection\");\n\nvar getScrollPosition = require(\"fbjs/lib/getScrollPosition\");\n\nvar isNode = require(\"./isInstanceOfNode\");\n/**\n * On `cut` events, native behavior is allowed to occur so that the system\n * clipboard is set properly. This means that we need to take steps to recover\n * the editor DOM state after the `cut` has occurred in order to maintain\n * control of the component.\n *\n * In addition, we can keep a copy of the removed fragment, including all\n * styles and entities, for use as an internal paste.\n */\n\n\nfunction editOnCut(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection();\n  var element = e.target;\n  var scrollPosition; // No selection, so there's nothing to cut.\n\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  } // Track the current scroll position so that it can be forced back in place\n  // after the editor regains control of the DOM.\n\n\n  if (isNode(element)) {\n    var node = element;\n    scrollPosition = getScrollPosition(Style.getScrollParent(node));\n  }\n\n  var fragment = getFragmentFromSelection(editorState);\n  editor.setClipboard(fragment); // Set `cut` mode to disable all event handling temporarily.\n\n  editor.setMode('cut'); // Let native `cut` behavior occur, then recover control.\n\n  setTimeout(function () {\n    editor.restoreEditorDOM(scrollPosition);\n    editor.exitCurrentMode();\n    editor.update(removeFragment(editorState));\n  }, 0);\n}\n\nfunction removeFragment(editorState) {\n  var newContent = DraftModifier.removeRange(editorState.getCurrentContent(), editorState.getSelection(), 'forward');\n  return EditorState.push(editorState, newContent, 'remove-range');\n}\n\nmodule.exports = editOnCut;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\n/**\n * Drag behavior has begun from outside the editor element.\n */\nfunction editOnDragOver(editor, e) {\n  editor.setMode('drag');\n  e.preventDefault();\n}\n\nmodule.exports = editOnDragOver;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\n/**\n * A `dragstart` event has begun within the text editor component.\n */\nfunction editOnDragStart(editor) {\n  editor._internalDrag = true;\n  editor.setMode('drag');\n}\n\nmodule.exports = editOnDragStart;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar EditorState = require(\"./EditorState\");\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nfunction editOnFocus(editor, e) {\n  var editorState = editor._latestEditorState;\n  var currentSelection = editorState.getSelection();\n\n  if (currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', true);\n  editor.props.onFocus && editor.props.onFocus(e); // When the tab containing this text editor is hidden and the user does a\n  // find-in-page in a _different_ tab, Chrome on Mac likes to forget what the\n  // selection was right after sending this focus event and (if you let it)\n  // moves the cursor back to the beginning of the editor, so we force the\n  // selection here instead of simply accepting it in order to preserve the\n  // old cursor position. See https://crbug.com/540004.\n  // But it looks like this is fixed in Chrome 60.0.3081.0.\n  // Other browsers also don't have this bug, so we prefer to acceptSelection\n  // when possible, to ensure that unfocusing and refocusing a Draft editor\n  // doesn't preserve the selection, matching how textareas work.\n\n  if (UserAgent.isBrowser('Chrome < 60.0.3081.0')) {\n    editor.update(EditorState.forceSelection(editorState, selection));\n  } else {\n    editor.update(EditorState.acceptSelection(editorState, selection));\n  }\n}\n\nmodule.exports = editOnFocus;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar DraftOffsetKey = require(\"./DraftOffsetKey\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar _require = require(\"./draftKeyUtils\"),\n    notEmptyKey = _require.notEmptyKey;\n\nvar findAncestorOffsetKey = require(\"./findAncestorOffsetKey\");\n\nvar keyCommandPlainBackspace = require(\"./keyCommandPlainBackspace\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar isGecko = UserAgent.isEngine('Gecko');\nvar DOUBLE_NEWLINE = '\\n\\n';\n\nfunction onInputType(inputType, editorState) {\n  switch (inputType) {\n    case 'deleteContentBackward':\n      return keyCommandPlainBackspace(editorState);\n  }\n\n  return editorState;\n}\n/**\n * This function serves two purposes\n *\n * 1. To update the editorState and call onChange method with the new\n * editorState. This editorState is calculated in editOnBeforeInput but the\n * onChange method is not called with the new state until this method does it.\n * It is done to handle a specific case where certain character inputs might\n * be replaced with something else. E.g. snippets ('rc' might be replaced\n * with boilerplate code for react component). More information on the\n * exact problem can be found here -\n * https://github.com/facebook/draft-js/commit/07892ba479bd4dfc6afd1e0ed179aaf51cd138b1\n *\n * 2. intended to handle spellcheck and autocorrect changes,\n * which occur in the DOM natively without any opportunity to observe or\n * interpret the changes before they occur.\n *\n * The `input` event fires in contentEditable elements reliably for non-IE\n * browsers, immediately after changes occur to the editor DOM. Since our other\n * handlers override or otherwise handle cover other varieties of text input,\n * the DOM state should match the model in all controlled input cases. Thus,\n * when an `input` change leads to a DOM/model mismatch, the change should be\n * due to a spellcheck change, and we can incorporate it into our model.\n */\n\n\nfunction editOnInput(editor, e) {\n  if (editor._pendingStateFromBeforeInput !== undefined) {\n    editor.update(editor._pendingStateFromBeforeInput);\n    editor._pendingStateFromBeforeInput = undefined;\n  } // at this point editor is not null for sure (after input)\n\n\n  var castedEditorElement = editor.editor;\n  var domSelection = castedEditorElement.ownerDocument.defaultView.getSelection();\n  var anchorNode = domSelection.anchorNode,\n      isCollapsed = domSelection.isCollapsed;\n  var isNotTextOrElementNode = (anchorNode === null || anchorNode === void 0 ? void 0 : anchorNode.nodeType) !== Node.TEXT_NODE && (anchorNode === null || anchorNode === void 0 ? void 0 : anchorNode.nodeType) !== Node.ELEMENT_NODE;\n\n  if (anchorNode == null || isNotTextOrElementNode) {\n    // TODO: (t16149272) figure out context for this change\n    return;\n  }\n\n  if (anchorNode.nodeType === Node.TEXT_NODE && (anchorNode.previousSibling !== null || anchorNode.nextSibling !== null)) {\n    // When typing at the beginning of a visual line, Chrome splits the text\n    // nodes into two. Why? No one knows. This commit is suspicious:\n    // https://chromium.googlesource.com/chromium/src/+/a3b600981286b135632371477f902214c55a1724\n    // To work around, we'll merge the sibling text nodes back into this one.\n    var span = anchorNode.parentNode;\n\n    if (span == null) {\n      // Handle null-parent case.\n      return;\n    }\n\n    anchorNode.nodeValue = span.textContent;\n\n    for (var child = span.firstChild; child != null; child = child.nextSibling) {\n      if (child !== anchorNode) {\n        span.removeChild(child);\n      }\n    }\n  }\n\n  var domText = anchorNode.textContent;\n  var editorState = editor._latestEditorState;\n  var offsetKey = nullthrows(findAncestorOffsetKey(anchorNode));\n\n  var _DraftOffsetKey$decod = DraftOffsetKey.decode(offsetKey),\n      blockKey = _DraftOffsetKey$decod.blockKey,\n      decoratorKey = _DraftOffsetKey$decod.decoratorKey,\n      leafKey = _DraftOffsetKey$decod.leafKey;\n\n  var _editorState$getBlock = editorState.getBlockTree(blockKey).getIn([decoratorKey, 'leaves', leafKey]),\n      start = _editorState$getBlock.start,\n      end = _editorState$getBlock.end;\n\n  var content = editorState.getCurrentContent();\n  var block = content.getBlockForKey(blockKey);\n  var modelText = block.getText().slice(start, end); // Special-case soft newlines here. If the DOM text ends in a soft newline,\n  // we will have manually inserted an extra soft newline in DraftEditorLeaf.\n  // We want to remove this extra newline for the purpose of our comparison\n  // of DOM and model text.\n\n  if (domText.endsWith(DOUBLE_NEWLINE)) {\n    domText = domText.slice(0, -1);\n  } // No change -- the DOM is up to date. Nothing to do here.\n\n\n  if (domText === modelText) {\n    // This can be buggy for some Android keyboards because they don't fire\n    // standard onkeydown/pressed events and only fired editOnInput\n    // so domText is already changed by the browser and ends up being equal\n    // to modelText unexpectedly.\n    // Newest versions of Android support the dom-inputevent-inputtype\n    // and we can use the `inputType` to properly apply the state changes.\n\n    /* $FlowFixMe[prop-missing] inputType is only defined on a draft of a\n     * standard. https://w3c.github.io/input-events/#dom-inputevent-inputtype\n     */\n    var inputType = e.nativeEvent.inputType;\n\n    if (inputType) {\n      var newEditorState = onInputType(inputType, editorState);\n\n      if (newEditorState !== editorState) {\n        editor.restoreEditorDOM();\n        editor.update(newEditorState);\n        return;\n      }\n    }\n\n    return;\n  }\n\n  var selection = editorState.getSelection(); // We'll replace the entire leaf with the text content of the target.\n\n  var targetRange = selection.merge({\n    anchorOffset: start,\n    focusOffset: end,\n    isBackward: false\n  });\n  var entityKey = block.getEntityAt(start);\n  var entity = notEmptyKey(entityKey) ? content.getEntity(entityKey) : null;\n  var entityType = entity != null ? entity.getMutability() : null;\n  var preserveEntity = entityType === 'MUTABLE'; // Immutable or segmented entities cannot properly be handled by the\n  // default browser undo, so we have to use a different change type to\n  // force using our internal undo method instead of falling through to the\n  // native browser undo.\n\n  var changeType = preserveEntity ? 'spellcheck-change' : 'apply-entity';\n  var newContent = DraftModifier.replaceText(content, targetRange, domText, block.getInlineStyleAt(start), preserveEntity ? block.getEntityAt(start) : null);\n  var anchorOffset, focusOffset, startOffset, endOffset;\n\n  if (isGecko) {\n    // Firefox selection does not change while the context menu is open, so\n    // we preserve the anchor and focus values of the DOM selection.\n    anchorOffset = domSelection.anchorOffset;\n    focusOffset = domSelection.focusOffset;\n    startOffset = start + Math.min(anchorOffset, focusOffset);\n    endOffset = startOffset + Math.abs(anchorOffset - focusOffset);\n    anchorOffset = startOffset;\n    focusOffset = endOffset;\n  } else {\n    // Browsers other than Firefox may adjust DOM selection while the context\n    // menu is open, and Safari autocorrect is prone to providing an inaccurate\n    // DOM selection. Don't trust it. Instead, use our existing SelectionState\n    // and adjust it based on the number of characters changed during the\n    // mutation.\n    var charDelta = domText.length - modelText.length;\n    startOffset = selection.getStartOffset();\n    endOffset = selection.getEndOffset();\n    anchorOffset = isCollapsed ? endOffset + charDelta : startOffset;\n    focusOffset = endOffset + charDelta;\n  } // Segmented entities are completely or partially removed when their\n  // text content changes. For this case we do not want any text to be selected\n  // after the change, so we are not merging the selection.\n\n\n  var contentWithAdjustedDOMSelection = newContent.merge({\n    selectionBefore: content.getSelectionAfter(),\n    selectionAfter: selection.merge({\n      anchorOffset: anchorOffset,\n      focusOffset: focusOffset\n    })\n  });\n  editor.update(EditorState.push(editorState, contentWithAdjustedDOMSelection, changeType));\n}\n\nmodule.exports = editOnInput;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar KeyBindingUtil = require(\"./KeyBindingUtil\");\n\nvar Keys = require(\"fbjs/lib/Keys\");\n\nvar SecondaryClipboard = require(\"./SecondaryClipboard\");\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar isEventHandled = require(\"./isEventHandled\");\n\nvar keyCommandBackspaceToStartOfLine = require(\"./keyCommandBackspaceToStartOfLine\");\n\nvar keyCommandBackspaceWord = require(\"./keyCommandBackspaceWord\");\n\nvar keyCommandDeleteWord = require(\"./keyCommandDeleteWord\");\n\nvar keyCommandInsertNewline = require(\"./keyCommandInsertNewline\");\n\nvar keyCommandMoveSelectionToEndOfBlock = require(\"./keyCommandMoveSelectionToEndOfBlock\");\n\nvar keyCommandMoveSelectionToStartOfBlock = require(\"./keyCommandMoveSelectionToStartOfBlock\");\n\nvar keyCommandPlainBackspace = require(\"./keyCommandPlainBackspace\");\n\nvar keyCommandPlainDelete = require(\"./keyCommandPlainDelete\");\n\nvar keyCommandTransposeCharacters = require(\"./keyCommandTransposeCharacters\");\n\nvar keyCommandUndo = require(\"./keyCommandUndo\");\n\nvar isOptionKeyCommand = KeyBindingUtil.isOptionKeyCommand;\nvar isChrome = UserAgent.isBrowser('Chrome');\n/**\n * Map a `DraftEditorCommand` command value to a corresponding function.\n */\n\nfunction onKeyCommand(command, editorState, e) {\n  switch (command) {\n    case 'redo':\n      return EditorState.redo(editorState);\n\n    case 'delete':\n      return keyCommandPlainDelete(editorState);\n\n    case 'delete-word':\n      return keyCommandDeleteWord(editorState);\n\n    case 'backspace':\n      return keyCommandPlainBackspace(editorState);\n\n    case 'backspace-word':\n      return keyCommandBackspaceWord(editorState);\n\n    case 'backspace-to-start-of-line':\n      return keyCommandBackspaceToStartOfLine(editorState, e);\n\n    case 'split-block':\n      return keyCommandInsertNewline(editorState);\n\n    case 'transpose-characters':\n      return keyCommandTransposeCharacters(editorState);\n\n    case 'move-selection-to-start-of-block':\n      return keyCommandMoveSelectionToStartOfBlock(editorState);\n\n    case 'move-selection-to-end-of-block':\n      return keyCommandMoveSelectionToEndOfBlock(editorState);\n\n    case 'secondary-cut':\n      return SecondaryClipboard.cut(editorState);\n\n    case 'secondary-paste':\n      return SecondaryClipboard.paste(editorState);\n\n    default:\n      return editorState;\n  }\n}\n/**\n * Intercept keydown behavior to handle keys and commands manually, if desired.\n *\n * Keydown combinations may be mapped to `DraftCommand` values, which may\n * correspond to command functions that modify the editor or its contents.\n *\n * See `getDefaultKeyBinding` for defaults. Alternatively, the top-level\n * component may provide a custom mapping via the `keyBindingFn` prop.\n */\n\n\nfunction editOnKeyDown(editor, e) {\n  var keyCode = e.which;\n  var editorState = editor._latestEditorState;\n\n  function callDeprecatedHandler(handlerName) {\n    var deprecatedHandler = editor.props[handlerName];\n\n    if (deprecatedHandler) {\n      deprecatedHandler(e);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  switch (keyCode) {\n    case Keys.RETURN:\n      e.preventDefault(); // The top-level component may manually handle newline insertion. If\n      // no special handling is performed, fall through to command handling.\n\n      if (editor.props.handleReturn && isEventHandled(editor.props.handleReturn(e, editorState))) {\n        return;\n      }\n\n      break;\n\n    case Keys.ESC:\n      e.preventDefault();\n\n      if (callDeprecatedHandler('onEscape')) {\n        return;\n      }\n\n      break;\n\n    case Keys.TAB:\n      if (callDeprecatedHandler('onTab')) {\n        return;\n      }\n\n      break;\n\n    case Keys.UP:\n      if (callDeprecatedHandler('onUpArrow')) {\n        return;\n      }\n\n      break;\n\n    case Keys.RIGHT:\n      if (callDeprecatedHandler('onRightArrow')) {\n        return;\n      }\n\n      break;\n\n    case Keys.DOWN:\n      if (callDeprecatedHandler('onDownArrow')) {\n        return;\n      }\n\n      break;\n\n    case Keys.LEFT:\n      if (callDeprecatedHandler('onLeftArrow')) {\n        return;\n      }\n\n      break;\n\n    case Keys.SPACE:\n      // Prevent Chrome on OSX behavior where option + space scrolls.\n      if (isChrome && isOptionKeyCommand(e)) {\n        e.preventDefault();\n      }\n\n  }\n\n  var command = editor.props.keyBindingFn(e); // If no command is specified, allow keydown event to continue.\n\n  if (command == null || command === '') {\n    if (keyCode === Keys.SPACE && isChrome && isOptionKeyCommand(e)) {\n      // The default keydown event has already been prevented in order to stop\n      // Chrome from scrolling. Insert a nbsp into the editor as OSX would for\n      // other browsers.\n      var contentState = DraftModifier.replaceText(editorState.getCurrentContent(), editorState.getSelection(), \"\\xA0\");\n      editor.update(EditorState.push(editorState, contentState, 'insert-characters'));\n    }\n\n    return;\n  }\n\n  if (command === 'undo') {\n    // Since undo requires some special updating behavior to keep the editor\n    // in sync, handle it separately.\n    keyCommandUndo(e, editorState, editor.update);\n    return;\n  } // At this point, we know that we're handling a command of some kind, so\n  // we don't want to insert a character following the keydown.\n\n\n  e.preventDefault(); // Allow components higher up the tree to handle the command first.\n\n  if (editor.props.handleKeyCommand && isEventHandled(editor.props.handleKeyCommand(command, editorState, e.timeStamp))) {\n    return;\n  }\n\n  var newState = onKeyCommand(command, editorState, e);\n\n  if (newState !== editorState) {\n    editor.update(newState);\n  }\n}\n\nmodule.exports = editOnKeyDown;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar BlockMapBuilder = require(\"./BlockMapBuilder\");\n\nvar CharacterMetadata = require(\"./CharacterMetadata\");\n\nvar DataTransfer = require(\"fbjs/lib/DataTransfer\");\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar DraftPasteProcessor = require(\"./DraftPasteProcessor\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar RichTextEditorUtil = require(\"./RichTextEditorUtil\");\n\nvar getEntityKeyForSelection = require(\"./getEntityKeyForSelection\");\n\nvar getTextContentFromFiles = require(\"./getTextContentFromFiles\");\n\nvar isEventHandled = require(\"./isEventHandled\");\n\nvar splitTextIntoTextBlocks = require(\"./splitTextIntoTextBlocks\");\n/**\n * Paste content.\n */\n\n\nfunction editOnPaste(editor, e) {\n  e.preventDefault();\n  var data = new DataTransfer(e.clipboardData); // Get files, unless this is likely to be a string the user wants inline.\n\n  if (!data.isRichText()) {\n    var files = data.getFiles();\n    var defaultFileText = data.getText();\n\n    if (files.length > 0) {\n      // Allow customized paste handling for images, etc. Otherwise, fall\n      // through to insert text contents into the editor.\n      if (editor.props.handlePastedFiles && isEventHandled(editor.props.handlePastedFiles(files))) {\n        return;\n      }\n      /* $FlowFixMe[incompatible-call] This comment suppresses an error found\n       * DataTransfer was typed. getFiles() returns an array of <Files extends\n       * Blob>, not Blob */\n\n\n      getTextContentFromFiles(files, function (\n      /*string*/\n      fileText) {\n        fileText = fileText || defaultFileText;\n\n        if (!fileText) {\n          return;\n        }\n\n        var editorState = editor._latestEditorState;\n        var blocks = splitTextIntoTextBlocks(fileText);\n        var character = CharacterMetadata.create({\n          style: editorState.getCurrentInlineStyle(),\n          entity: getEntityKeyForSelection(editorState.getCurrentContent(), editorState.getSelection())\n        });\n        var currentBlockType = RichTextEditorUtil.getCurrentBlockType(editorState);\n        var text = DraftPasteProcessor.processText(blocks, character, currentBlockType);\n        var fragment = BlockMapBuilder.createFromArray(text);\n        var withInsertedText = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), fragment);\n        editor.update(EditorState.push(editorState, withInsertedText, 'insert-fragment'));\n      });\n      return;\n    }\n  }\n\n  var textBlocks = [];\n  var text = data.getText();\n  var html = data.getHTML();\n  var editorState = editor._latestEditorState;\n\n  if (editor.props.formatPastedText) {\n    var _editor$props$formatP = editor.props.formatPastedText(text, html),\n        formattedText = _editor$props$formatP.text,\n        formattedHtml = _editor$props$formatP.html;\n\n    text = formattedText;\n    html = formattedHtml;\n  }\n\n  if (editor.props.handlePastedText && isEventHandled(editor.props.handlePastedText(text, html, editorState))) {\n    return;\n  }\n\n  if (text) {\n    textBlocks = splitTextIntoTextBlocks(text);\n  }\n\n  if (!editor.props.stripPastedStyles) {\n    // If the text from the paste event is rich content that matches what we\n    // already have on the internal clipboard, assume that we should just use\n    // the clipboard fragment for the paste. This will allow us to preserve\n    // styling and entities, if any are present. Note that newlines are\n    // stripped during comparison -- this is because copy/paste within the\n    // editor in Firefox and IE will not include empty lines. The resulting\n    // paste will preserve the newlines correctly.\n    var internalClipboard = editor.getClipboard();\n\n    if (!editor.props.formatPastedText && data.isRichText() && internalClipboard) {\n      var _html;\n\n      if ( // If the editorKey is present in the pasted HTML, it should be safe to\n      // assume this is an internal paste.\n      ((_html = html) === null || _html === void 0 ? void 0 : _html.indexOf(editor.getEditorKey())) !== -1 || // The copy may have been made within a single block, in which case the\n      // editor key won't be part of the paste. In this case, just check\n      // whether the pasted text matches the internal clipboard.\n      textBlocks.length === 1 && internalClipboard.size === 1 && internalClipboard.first().getText() === text) {\n        editor.update(insertFragment(editor._latestEditorState, internalClipboard));\n        return;\n      }\n    } else if (internalClipboard && data.types.includes('com.apple.webarchive') && !data.types.includes('text/html') && areTextBlocksAndClipboardEqual(textBlocks, internalClipboard)) {\n      // Safari does not properly store text/html in some cases.\n      // Use the internalClipboard if present and equal to what is on\n      // the clipboard. See https://bugs.webkit.org/show_bug.cgi?id=19893.\n      editor.update(insertFragment(editor._latestEditorState, internalClipboard));\n      return;\n    } // If there is html paste data, try to parse that.\n\n\n    if (html) {\n      var htmlFragment = DraftPasteProcessor.processHTML(html, editor.props.blockRenderMap);\n\n      if (htmlFragment) {\n        var contentBlocks = htmlFragment.contentBlocks,\n            entityMap = htmlFragment.entityMap;\n\n        if (contentBlocks) {\n          var htmlMap = BlockMapBuilder.createFromArray(contentBlocks);\n          editor.update(insertFragment(editor._latestEditorState, htmlMap, entityMap));\n          return;\n        }\n      }\n    } // Otherwise, create a new fragment from our pasted text. Also\n    // empty the internal clipboard, since it's no longer valid.\n\n\n    editor.setClipboard(null);\n  }\n\n  if (textBlocks.length) {\n    var character = CharacterMetadata.create({\n      style: editorState.getCurrentInlineStyle(),\n      entity: getEntityKeyForSelection(editorState.getCurrentContent(), editorState.getSelection())\n    });\n    var currentBlockType = RichTextEditorUtil.getCurrentBlockType(editorState);\n    var textFragment = DraftPasteProcessor.processText(textBlocks, character, currentBlockType);\n    var textMap = BlockMapBuilder.createFromArray(textFragment);\n    editor.update(insertFragment(editor._latestEditorState, textMap));\n  }\n}\n\nfunction insertFragment(editorState, fragment, entityMap) {\n  var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), fragment); // TODO: merge the entity map once we stop using DraftEntity\n  // like this:\n  // const mergedEntityMap = newContent.getEntityMap().merge(entityMap);\n\n  return EditorState.push(editorState, newContent.set('entityMap', entityMap), 'insert-fragment');\n}\n\nfunction areTextBlocksAndClipboardEqual(textBlocks, blockMap) {\n  return textBlocks.length === blockMap.size && blockMap.valueSeq().every(function (block, ii) {\n    return block.getText() === textBlocks[ii];\n  });\n}\n\nmodule.exports = editOnPaste;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftJsDebugLogging = require(\"./DraftJsDebugLogging\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar getContentEditableContainer = require(\"./getContentEditableContainer\");\n\nvar getDraftEditorSelection = require(\"./getDraftEditorSelection\");\n\nfunction editOnSelect(editor) {\n  if (editor._blockSelectEvents || editor._latestEditorState !== editor.props.editorState) {\n    if (editor._blockSelectEvents) {\n      var _editorState = editor.props.editorState;\n\n      var selectionState = _editorState.getSelection();\n\n      DraftJsDebugLogging.logBlockedSelectionEvent({\n        // For now I don't think we need any other info\n        anonymizedDom: 'N/A',\n        extraParams: JSON.stringify({\n          stacktrace: new Error().stack\n        }),\n        selectionState: JSON.stringify(selectionState.toJS())\n      });\n    }\n\n    return;\n  }\n\n  var editorState = editor.props.editorState;\n  var documentSelection = getDraftEditorSelection(editorState, getContentEditableContainer(editor));\n  var updatedSelectionState = documentSelection.selectionState;\n\n  if (updatedSelectionState !== editorState.getSelection()) {\n    if (documentSelection.needsRecovery) {\n      editorState = EditorState.forceSelection(editorState, updatedSelectionState);\n    } else {\n      editorState = EditorState.acceptSelection(editorState, updatedSelectionState);\n    }\n\n    editor.update(editorState);\n  }\n}\n\nmodule.exports = editOnSelect;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftStringKey = require(\"./DraftStringKey\");\n\nvar UnicodeUtils = require(\"fbjs/lib/UnicodeUtils\");\n\nvar strlen = UnicodeUtils.strlen;\n/**\n * Convert to UTF-8 character counts for storage.\n */\n\nfunction encodeEntityRanges(block, storageMap) {\n  var encoded = [];\n  block.findEntityRanges(function (character) {\n    return !!character.getEntity();\n  }, function (\n  /*number*/\n  start,\n  /*number*/\n  end) {\n    var text = block.getText();\n    var key = block.getEntityAt(start);\n    encoded.push({\n      offset: strlen(text.slice(0, start)),\n      length: strlen(text.slice(start, end)),\n      // Encode the key as a number for range storage.\n      key: Number(storageMap[DraftStringKey.stringify(key)])\n    });\n  });\n  return encoded;\n}\n\nmodule.exports = encodeEntityRanges;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UnicodeUtils = require(\"fbjs/lib/UnicodeUtils\");\n\nvar findRangesImmutable = require(\"./findRangesImmutable\");\n\nvar areEqual = function areEqual(a, b) {\n  return a === b;\n};\n\nvar isTruthy = function isTruthy(a) {\n  return !!a;\n};\n\nvar EMPTY_ARRAY = [];\n/**\n * Helper function for getting encoded styles for each inline style. Convert\n * to UTF-8 character counts for storage.\n */\n\nfunction getEncodedInlinesForType(block, styleList, styleToEncode) {\n  var ranges = []; // Obtain an array with ranges for only the specified style.\n\n  var filteredInlines = styleList.map(function (style) {\n    return style.has(styleToEncode);\n  }).toList();\n  findRangesImmutable(filteredInlines, areEqual, // We only want to keep ranges with nonzero style values.\n  isTruthy, function (start, end) {\n    var text = block.getText();\n    ranges.push({\n      offset: UnicodeUtils.strlen(text.slice(0, start)),\n      length: UnicodeUtils.strlen(text.slice(start, end)),\n      style: styleToEncode\n    });\n  });\n  return ranges;\n}\n/*\n * Retrieve the encoded arrays of inline styles, with each individual style\n * treated separately.\n */\n\n\nfunction encodeInlineStyleRanges(block) {\n  var styleList = block.getCharacterList().map(function (c) {\n    return c.getStyle();\n  }).toList();\n  var ranges = styleList.flatten().toSet().map(function (style) {\n    return getEncodedInlinesForType(block, styleList, style);\n  });\n  return Array.prototype.concat.apply(EMPTY_ARRAY, ranges.toJS());\n}\n\nmodule.exports = encodeInlineStyleRanges;","\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\nvar UnicodeUtils = require(\"fbjs/lib/UnicodeUtils\");\n\nvar getCorrectDocumentFromNode = require(\"./getCorrectDocumentFromNode\");\n\nvar getRangeClientRects = require(\"./getRangeClientRects\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n/**\n * Return the computed line height, in pixels, for the provided element.\n */\n\n\nfunction getLineHeightPx(element) {\n  var computed = getComputedStyle(element);\n  var correctDocument = getCorrectDocumentFromNode(element);\n  var div = correctDocument.createElement('div');\n  div.style.fontFamily = computed.fontFamily;\n  div.style.fontSize = computed.fontSize;\n  div.style.fontStyle = computed.fontStyle;\n  div.style.fontWeight = computed.fontWeight;\n  div.style.lineHeight = computed.lineHeight;\n  div.style.position = 'absolute';\n  div.textContent = 'M';\n  var documentBody = correctDocument.body;\n  !documentBody ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing document.body') : invariant(false) : void 0; // forced layout here\n\n  documentBody.appendChild(div);\n  var rect = div.getBoundingClientRect();\n  documentBody.removeChild(div);\n  return rect.height;\n}\n/**\n * Return whether every ClientRect in the provided list lies on the same line.\n *\n * We assume that the rects on the same line all contain the baseline, so the\n * lowest top line needs to be above the highest bottom line (i.e., if you were\n * to project the rects onto the y-axis, their intersection would be nonempty).\n *\n * In addition, we require that no two boxes are lineHeight (or more) apart at\n * either top or bottom, which helps protect against false positives for fonts\n * with extremely large glyph heights (e.g., with a font size of 17px, Zapfino\n * produces rects of height 58px!).\n */\n\n\nfunction areRectsOnOneLine(rects, lineHeight) {\n  var minTop = Infinity;\n  var minBottom = Infinity;\n  var maxTop = -Infinity;\n  var maxBottom = -Infinity;\n\n  for (var ii = 0; ii < rects.length; ii++) {\n    var rect = rects[ii];\n\n    if (rect.width === 0 || rect.width === 1) {\n      // When a range starts or ends a soft wrap, many browsers (Chrome, IE,\n      // Safari) include an empty rect on the previous or next line. When the\n      // text lies in a container whose position is not integral (e.g., from\n      // margin: auto), Safari makes these empty rects have width 1 (instead of\n      // 0). Having one-pixel-wide characters seems unlikely (and most browsers\n      // report widths in subpixel precision anyway) so it's relatively safe to\n      // skip over them.\n      continue;\n    }\n\n    minTop = Math.min(minTop, rect.top);\n    minBottom = Math.min(minBottom, rect.bottom);\n    maxTop = Math.max(maxTop, rect.top);\n    maxBottom = Math.max(maxBottom, rect.bottom);\n  }\n\n  return maxTop <= minBottom && maxTop - minTop < lineHeight && maxBottom - minBottom < lineHeight;\n}\n/**\n * Return the length of a node, as used by Range offsets.\n */\n\n\nfunction getNodeLength(node) {\n  // http://www.w3.org/TR/dom/#concept-node-length\n  switch (node.nodeType) {\n    case Node.DOCUMENT_TYPE_NODE:\n      return 0;\n\n    case Node.TEXT_NODE:\n    case Node.PROCESSING_INSTRUCTION_NODE:\n    case Node.COMMENT_NODE:\n      return node.length;\n\n    default:\n      return node.childNodes.length;\n  }\n}\n/**\n * Given a collapsed range, move the start position backwards as far as\n * possible while the range still spans only a single line.\n */\n\n\nfunction expandRangeToStartOfLine(range) {\n  !range.collapsed ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'expandRangeToStartOfLine: Provided range is not collapsed.') : invariant(false) : void 0;\n  range = range.cloneRange();\n  var containingElement = range.startContainer;\n\n  if (containingElement.nodeType !== 1) {\n    containingElement = containingElement.parentNode;\n  }\n\n  var lineHeight = getLineHeightPx(containingElement); // Imagine our text looks like:\n  //   <div><span>once upon a time, there was a <em>boy\n  //   who lived</em> </span><q><strong>under^ the\n  //   stairs</strong> in a small closet.</q></div>\n  // where the caret represents the cursor. First, we crawl up the tree until\n  // the range spans multiple lines (setting the start point to before\n  // \"<strong>\", then before \"<div>\"), then at each level we do a search to\n  // find the latest point which is still on a previous line. We'll find that\n  // the break point is inside the span, then inside the <em>, then in its text\n  // node child, the actual break point before \"who\".\n\n  var bestContainer = range.endContainer;\n  var bestOffset = range.endOffset;\n  range.setStart(range.startContainer, 0);\n\n  while (areRectsOnOneLine(getRangeClientRects(range), lineHeight)) {\n    bestContainer = range.startContainer;\n    bestOffset = range.startOffset;\n    !bestContainer.parentNode ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Found unexpected detached subtree when traversing.') : invariant(false) : void 0;\n    range.setStartBefore(bestContainer);\n\n    if (bestContainer.nodeType === 1 && getComputedStyle(bestContainer).display !== 'inline') {\n      // The start of the line is never in a different block-level container.\n      break;\n    }\n  } // In the above example, range now spans from \"<div>\" to \"under\",\n  // bestContainer is <div>, and bestOffset is 1 (index of <q> inside <div>)].\n  // Picking out which child to recurse into here is a special case since we\n  // don't want to check past <q> -- once we find that the final range starts\n  // in <span>, we can look at all of its children (and all of their children)\n  // to find the break point.\n  // At all times, (bestContainer, bestOffset) is the latest single-line start\n  // point that we know of.\n\n\n  var currentContainer = bestContainer;\n  var maxIndexToConsider = bestOffset - 1;\n\n  do {\n    var nodeValue = currentContainer.nodeValue;\n    var ii = maxIndexToConsider;\n\n    for (; ii >= 0; ii--) {\n      if (nodeValue != null && ii > 0 && UnicodeUtils.isSurrogatePair(nodeValue, ii - 1)) {\n        // We're in the middle of a surrogate pair -- skip over so we never\n        // return a range with an endpoint in the middle of a code point.\n        continue;\n      }\n\n      range.setStart(currentContainer, ii);\n\n      if (areRectsOnOneLine(getRangeClientRects(range), lineHeight)) {\n        bestContainer = currentContainer;\n        bestOffset = ii;\n      } else {\n        break;\n      }\n    }\n\n    if (ii === -1 || currentContainer.childNodes.length === 0) {\n      // If ii === -1, then (bestContainer, bestOffset), which is equal to\n      // (currentContainer, 0), was a single-line start point but a start\n      // point before currentContainer wasn't, so the line break seems to\n      // have occurred immediately after currentContainer's start tag\n      //\n      // If currentContainer.childNodes.length === 0, we're already at a\n      // terminal node (e.g., text node) and should return our current best.\n      break;\n    }\n\n    currentContainer = currentContainer.childNodes[ii];\n    maxIndexToConsider = getNodeLength(currentContainer);\n  } while (true);\n\n  range.setStart(bestContainer, bestOffset);\n  return range;\n}\n\nmodule.exports = expandRangeToStartOfLine;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar getCorrectDocumentFromNode = require(\"./getCorrectDocumentFromNode\");\n\nvar getSelectionOffsetKeyForNode = require(\"./getSelectionOffsetKeyForNode\");\n/**\n * Get the key from the node's nearest offset-aware ancestor.\n */\n\n\nfunction findAncestorOffsetKey(node) {\n  var searchNode = node;\n\n  while (searchNode && searchNode !== getCorrectDocumentFromNode(node).documentElement) {\n    var key = getSelectionOffsetKeyForNode(searchNode);\n\n    if (key != null) {\n      return key;\n    }\n\n    searchNode = searchNode.parentNode;\n  }\n\n  return null;\n}\n\nmodule.exports = findAncestorOffsetKey;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\n/**\n * Search through an array to find contiguous stretches of elements that\n * match a specified filter function.\n *\n * When ranges are found, execute a specified `found` function to supply\n * the values to the caller.\n */\nfunction findRangesImmutable(haystack, areEqualFn, filterFn, foundFn) {\n  if (!haystack.size) {\n    return;\n  }\n\n  var cursor = 0;\n  haystack.reduce(function (value, nextValue, nextIndex) {\n    if (!areEqualFn(value, nextValue)) {\n      if (filterFn(value)) {\n        foundFn(cursor, nextIndex);\n      }\n\n      cursor = nextIndex;\n    }\n\n    return nextValue;\n  });\n  filterFn(haystack.last()) && foundFn(cursor, haystack.count());\n}\n\nmodule.exports = findRangesImmutable;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar seenKeys = {};\nvar MULTIPLIER = Math.pow(2, 24);\n\nfunction generateRandomKey() {\n  var key;\n\n  while (key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(+key)) {\n    key = Math.floor(Math.random() * MULTIPLIER).toString(32);\n  }\n\n  seenKeys[key] = true;\n  return key;\n}\n\nmodule.exports = generateRandomKey;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftEntitySegments = require(\"./DraftEntitySegments\");\n\nvar getRangesForDraftEntity = require(\"./getRangesForDraftEntity\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n/**\n * Given a SelectionState and a removal direction, determine the entire range\n * that should be removed from a ContentState. This is based on any entities\n * within the target, with their `mutability` values taken into account.\n *\n * For instance, if we are attempting to remove part of an \"immutable\" entity\n * range, the entire entity must be removed. The returned `SelectionState`\n * will be adjusted accordingly.\n */\n\n\nfunction getCharacterRemovalRange(entityMap, startBlock, endBlock, selectionState, direction) {\n  var start = selectionState.getStartOffset();\n  var end = selectionState.getEndOffset();\n  var startEntityKey = startBlock.getEntityAt(start);\n  var endEntityKey = endBlock.getEntityAt(end - 1);\n\n  if (!startEntityKey && !endEntityKey) {\n    return selectionState;\n  }\n\n  var newSelectionState = selectionState;\n\n  if (startEntityKey && startEntityKey === endEntityKey) {\n    newSelectionState = getEntityRemovalRange(entityMap, startBlock, newSelectionState, direction, startEntityKey, true, true);\n  } else if (startEntityKey && endEntityKey) {\n    var startSelectionState = getEntityRemovalRange(entityMap, startBlock, newSelectionState, direction, startEntityKey, false, true);\n    var endSelectionState = getEntityRemovalRange(entityMap, endBlock, newSelectionState, direction, endEntityKey, false, false);\n    newSelectionState = newSelectionState.merge({\n      anchorOffset: startSelectionState.getAnchorOffset(),\n      focusOffset: endSelectionState.getFocusOffset(),\n      isBackward: false\n    });\n  } else if (startEntityKey) {\n    var _startSelectionState = getEntityRemovalRange(entityMap, startBlock, newSelectionState, direction, startEntityKey, false, true);\n\n    newSelectionState = newSelectionState.merge({\n      anchorOffset: _startSelectionState.getStartOffset(),\n      isBackward: false\n    });\n  } else if (endEntityKey) {\n    var _endSelectionState = getEntityRemovalRange(entityMap, endBlock, newSelectionState, direction, endEntityKey, false, false);\n\n    newSelectionState = newSelectionState.merge({\n      focusOffset: _endSelectionState.getEndOffset(),\n      isBackward: false\n    });\n  }\n\n  return newSelectionState;\n}\n\nfunction getEntityRemovalRange(entityMap, block, selectionState, direction, entityKey, isEntireSelectionWithinEntity, isEntityAtStart) {\n  var start = selectionState.getStartOffset();\n  var end = selectionState.getEndOffset();\n\n  var entity = entityMap.__get(entityKey);\n\n  var mutability = entity.getMutability();\n  var sideToConsider = isEntityAtStart ? start : end; // `MUTABLE` entities can just have the specified range of text removed\n  // directly. No adjustments are needed.\n\n  if (mutability === 'MUTABLE') {\n    return selectionState;\n  } // Find the entity range that overlaps with our removal range.\n\n\n  var entityRanges = getRangesForDraftEntity(block, entityKey).filter(function (range) {\n    return sideToConsider <= range.end && sideToConsider >= range.start;\n  });\n  !(entityRanges.length == 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'There should only be one entity range within this removal range.') : invariant(false) : void 0;\n  var entityRange = entityRanges[0]; // For `IMMUTABLE` entity types, we will remove the entire entity range.\n\n  if (mutability === 'IMMUTABLE') {\n    return selectionState.merge({\n      anchorOffset: entityRange.start,\n      focusOffset: entityRange.end,\n      isBackward: false\n    });\n  } // For `SEGMENTED` entity types, determine the appropriate segment to\n  // remove.\n\n\n  if (!isEntireSelectionWithinEntity) {\n    if (isEntityAtStart) {\n      end = entityRange.end;\n    } else {\n      start = entityRange.start;\n    }\n  }\n\n  var removalRange = DraftEntitySegments.getRemovalRange(start, end, block.getText().slice(entityRange.start, entityRange.end), entityRange.start, direction);\n  return selectionState.merge({\n    anchorOffset: removalRange.start,\n    focusOffset: removalRange.end,\n    isBackward: false\n  });\n}\n\nmodule.exports = getCharacterRemovalRange;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isHTMLElement = require(\"./isHTMLElement\");\n\nfunction getContentEditableContainer(editor) {\n  var editorNode = editor.editorContainer;\n  !editorNode ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing editorNode') : invariant(false) : void 0;\n  !isHTMLElement(editorNode.firstChild) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'editorNode.firstChild is not an HTMLElement') : invariant(false) : void 0;\n  var htmlElement = editorNode.firstChild;\n  return htmlElement;\n}\n\nmodule.exports = getContentEditableContainer;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar randomizeBlockMapKeys = require(\"./randomizeBlockMapKeys\");\n\nvar removeEntitiesAtEdges = require(\"./removeEntitiesAtEdges\");\n\nvar getContentStateFragment = function getContentStateFragment(contentState, selectionState) {\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset(); // Edge entities should be stripped to ensure that we don't preserve\n  // invalid partial entities when the fragment is reused. We do, however,\n  // preserve entities that are entirely within the selection range.\n\n  var contentWithoutEdgeEntities = removeEntitiesAtEdges(contentState, selectionState);\n  var blockMap = contentWithoutEdgeEntities.getBlockMap();\n  var blockKeys = blockMap.keySeq();\n  var startIndex = blockKeys.indexOf(startKey);\n  var endIndex = blockKeys.indexOf(endKey) + 1;\n  return randomizeBlockMapKeys(blockMap.slice(startIndex, endIndex).map(function (block, blockKey) {\n    var text = block.getText();\n    var chars = block.getCharacterList();\n\n    if (startKey === endKey) {\n      return block.merge({\n        text: text.slice(startOffset, endOffset),\n        characterList: chars.slice(startOffset, endOffset)\n      });\n    }\n\n    if (blockKey === startKey) {\n      return block.merge({\n        text: text.slice(startOffset),\n        characterList: chars.slice(startOffset)\n      });\n    }\n\n    if (blockKey === endKey) {\n      return block.merge({\n        text: text.slice(0, endOffset),\n        characterList: chars.slice(0, endOffset)\n      });\n    }\n\n    return block;\n  }));\n};\n\nmodule.exports = getContentStateFragment;","\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\nfunction getCorrectDocumentFromNode(node) {\n  if (!node || !node.ownerDocument) {\n    return document;\n  }\n\n  return node.ownerDocument;\n}\n\nmodule.exports = getCorrectDocumentFromNode;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar KeyBindingUtil = require(\"./KeyBindingUtil\");\n\nvar Keys = require(\"fbjs/lib/Keys\");\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar isOSX = UserAgent.isPlatform('Mac OS X'); // Firefox on OSX had a bug resulting in navigation instead of cursor movement.\n// This bug was fixed in Firefox 29. Feature detection is virtually impossible\n// so we just check the version number. See #342765.\n\nvar shouldFixFirefoxMovement = isOSX && UserAgent.isBrowser('Firefox < 29');\nvar hasCommandModifier = KeyBindingUtil.hasCommandModifier,\n    isCtrlKeyCommand = KeyBindingUtil.isCtrlKeyCommand;\n\nfunction shouldRemoveWord(e) {\n  return isOSX && e.altKey || isCtrlKeyCommand(e);\n}\n/**\n * Get the appropriate undo/redo command for a Z key command.\n */\n\n\nfunction getZCommand(e) {\n  if (!hasCommandModifier(e)) {\n    return null;\n  }\n\n  return e.shiftKey ? 'redo' : 'undo';\n}\n\nfunction getDeleteCommand(e) {\n  // Allow default \"cut\" behavior for PCs on Shift + Delete.\n  if (!isOSX && e.shiftKey) {\n    return null;\n  }\n\n  return shouldRemoveWord(e) ? 'delete-word' : 'delete';\n}\n\nfunction getBackspaceCommand(e) {\n  if (hasCommandModifier(e) && isOSX) {\n    return 'backspace-to-start-of-line';\n  }\n\n  return shouldRemoveWord(e) ? 'backspace-word' : 'backspace';\n}\n/**\n * Retrieve a bound key command for the given event.\n */\n\n\nfunction getDefaultKeyBinding(e) {\n  switch (e.keyCode) {\n    case 66:\n      // B\n      return hasCommandModifier(e) ? 'bold' : null;\n\n    case 68:\n      // D\n      return isCtrlKeyCommand(e) ? 'delete' : null;\n\n    case 72:\n      // H\n      return isCtrlKeyCommand(e) ? 'backspace' : null;\n\n    case 73:\n      // I\n      return hasCommandModifier(e) ? 'italic' : null;\n\n    case 74:\n      // J\n      return hasCommandModifier(e) ? 'code' : null;\n\n    case 75:\n      // K\n      return isOSX && isCtrlKeyCommand(e) ? 'secondary-cut' : null;\n\n    case 77:\n      // M\n      return isCtrlKeyCommand(e) ? 'split-block' : null;\n\n    case 79:\n      // O\n      return isCtrlKeyCommand(e) ? 'split-block' : null;\n\n    case 84:\n      // T\n      return isOSX && isCtrlKeyCommand(e) ? 'transpose-characters' : null;\n\n    case 85:\n      // U\n      return hasCommandModifier(e) ? 'underline' : null;\n\n    case 87:\n      // W\n      return isOSX && isCtrlKeyCommand(e) ? 'backspace-word' : null;\n\n    case 89:\n      // Y\n      if (isCtrlKeyCommand(e)) {\n        return isOSX ? 'secondary-paste' : 'redo';\n      }\n\n      return null;\n\n    case 90:\n      // Z\n      return getZCommand(e) || null;\n\n    case Keys.RETURN:\n      return 'split-block';\n\n    case Keys.DELETE:\n      return getDeleteCommand(e);\n\n    case Keys.BACKSPACE:\n      return getBackspaceCommand(e);\n    // LEFT/RIGHT handlers serve as a workaround for a Firefox bug.\n\n    case Keys.LEFT:\n      return shouldFixFirefoxMovement && hasCommandModifier(e) ? 'move-selection-to-start-of-block' : null;\n\n    case Keys.RIGHT:\n      return shouldFixFirefoxMovement && hasCommandModifier(e) ? 'move-selection-to-end-of-block' : null;\n\n    default:\n      return null;\n  }\n}\n\nmodule.exports = getDefaultKeyBinding;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar getDraftEditorSelectionWithNodes = require(\"./getDraftEditorSelectionWithNodes\");\n/**\n * Convert the current selection range to an anchor/focus pair of offset keys\n * and values that can be interpreted by components.\n */\n\n\nfunction getDraftEditorSelection(editorState, root) {\n  var selection = root.ownerDocument.defaultView.getSelection();\n  var anchorNode = selection.anchorNode,\n      anchorOffset = selection.anchorOffset,\n      focusNode = selection.focusNode,\n      focusOffset = selection.focusOffset,\n      rangeCount = selection.rangeCount;\n\n  if ( // No active selection.\n  rangeCount === 0 || // No selection, ever. As in, the user hasn't selected anything since\n  // opening the document.\n  anchorNode == null || focusNode == null) {\n    return {\n      selectionState: editorState.getSelection().set('hasFocus', false),\n      needsRecovery: false\n    };\n  }\n\n  return getDraftEditorSelectionWithNodes(editorState, root, anchorNode, anchorOffset, focusNode, focusOffset);\n}\n\nmodule.exports = getDraftEditorSelection;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar findAncestorOffsetKey = require(\"./findAncestorOffsetKey\");\n\nvar getSelectionOffsetKeyForNode = require(\"./getSelectionOffsetKeyForNode\");\n\nvar getUpdatedSelectionState = require(\"./getUpdatedSelectionState\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isElement = require(\"./isElement\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\n/**\n * Convert the current selection range to an anchor/focus pair of offset keys\n * and values that can be interpreted by components.\n */\nfunction getDraftEditorSelectionWithNodes(editorState, root, anchorNode, anchorOffset, focusNode, focusOffset) {\n  var anchorIsTextNode = anchorNode.nodeType === Node.TEXT_NODE;\n  var focusIsTextNode = focusNode.nodeType === Node.TEXT_NODE; // If the selection range lies only on text nodes, the task is simple.\n  // Find the nearest offset-aware elements and use the\n  // offset values supplied by the selection range.\n\n  if (anchorIsTextNode && focusIsTextNode) {\n    return {\n      selectionState: getUpdatedSelectionState(editorState, nullthrows(findAncestorOffsetKey(anchorNode)), anchorOffset, nullthrows(findAncestorOffsetKey(focusNode)), focusOffset),\n      needsRecovery: false\n    };\n  }\n\n  var anchorPoint = null;\n  var focusPoint = null;\n  var needsRecovery = true; // An element is selected. Convert this selection range into leaf offset\n  // keys and offset values for consumption at the component level. This\n  // is common in Firefox, where select-all and triple click behavior leads\n  // to entire elements being selected.\n  //\n  // Note that we use the `needsRecovery` parameter in the callback here. This\n  // is because when certain elements are selected, the behavior for subsequent\n  // cursor movement (e.g. via arrow keys) is uncertain and may not match\n  // expectations at the component level. For example, if an entire <div> is\n  // selected and the user presses the right arrow, Firefox keeps the selection\n  // on the <div>. If we allow subsequent keypresses to insert characters\n  // natively, they will be inserted into a browser-created text node to the\n  // right of that <div>. This is obviously undesirable.\n  //\n  // With the `needsRecovery` flag, we inform the caller that it is responsible\n  // for manually setting the selection state on the rendered document to\n  // ensure proper selection state maintenance.\n\n  if (anchorIsTextNode) {\n    anchorPoint = {\n      key: nullthrows(findAncestorOffsetKey(anchorNode)),\n      offset: anchorOffset\n    };\n    focusPoint = getPointForNonTextNode(root, focusNode, focusOffset);\n  } else if (focusIsTextNode) {\n    focusPoint = {\n      key: nullthrows(findAncestorOffsetKey(focusNode)),\n      offset: focusOffset\n    };\n    anchorPoint = getPointForNonTextNode(root, anchorNode, anchorOffset);\n  } else {\n    anchorPoint = getPointForNonTextNode(root, anchorNode, anchorOffset);\n    focusPoint = getPointForNonTextNode(root, focusNode, focusOffset); // If the selection is collapsed on an empty block, don't force recovery.\n    // This way, on arrow key selection changes, the browser can move the\n    // cursor from a non-zero offset on one block, through empty blocks,\n    // to a matching non-zero offset on other text blocks.\n\n    if (anchorNode === focusNode && anchorOffset === focusOffset) {\n      needsRecovery = !!anchorNode.firstChild && anchorNode.firstChild.nodeName !== 'BR';\n    }\n  }\n\n  return {\n    selectionState: getUpdatedSelectionState(editorState, anchorPoint.key, anchorPoint.offset, focusPoint.key, focusPoint.offset),\n    needsRecovery: needsRecovery\n  };\n}\n/**\n * Identify the first leaf descendant for the given node.\n */\n\n\nfunction getFirstLeaf(node) {\n  while (node.firstChild && ( // data-blocks has no offset\n  isElement(node.firstChild) && node.firstChild.getAttribute('data-blocks') === 'true' || getSelectionOffsetKeyForNode(node.firstChild))) {\n    node = node.firstChild;\n  }\n\n  return node;\n}\n/**\n * Identify the last leaf descendant for the given node.\n */\n\n\nfunction getLastLeaf(node) {\n  while (node.lastChild && ( // data-blocks has no offset\n  isElement(node.lastChild) && node.lastChild.getAttribute('data-blocks') === 'true' || getSelectionOffsetKeyForNode(node.lastChild))) {\n    node = node.lastChild;\n  }\n\n  return node;\n}\n\nfunction getPointForNonTextNode(editorRoot, startNode, childOffset) {\n  var node = startNode;\n  var offsetKey = findAncestorOffsetKey(node);\n  !(offsetKey != null || editorRoot && (editorRoot === node || editorRoot.firstChild === node)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Unknown node in selection range.') : invariant(false) : void 0; // If the editorRoot is the selection, step downward into the content\n  // wrapper.\n\n  if (editorRoot === node) {\n    node = node.firstChild;\n    !isElement(node) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid DraftEditorContents node.') : invariant(false) : void 0;\n    var castedNode = node; // assignment only added for flow :/\n    // otherwise it throws in line 200 saying that node can be null or undefined\n\n    node = castedNode;\n    !(node.getAttribute('data-contents') === 'true') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid DraftEditorContents structure.') : invariant(false) : void 0;\n\n    if (childOffset > 0) {\n      childOffset = node.childNodes.length;\n    }\n  } // If the child offset is zero and we have an offset key, we're done.\n  // If there's no offset key because the entire editor is selected,\n  // find the leftmost (\"first\") leaf in the tree and use that as the offset\n  // key.\n\n\n  if (childOffset === 0) {\n    var key = null;\n\n    if (offsetKey != null) {\n      key = offsetKey;\n    } else {\n      var firstLeaf = getFirstLeaf(node);\n      key = nullthrows(getSelectionOffsetKeyForNode(firstLeaf));\n    }\n\n    return {\n      key: key,\n      offset: 0\n    };\n  }\n\n  var nodeBeforeCursor = node.childNodes[childOffset - 1];\n  var leafKey = null;\n  var textLength = null;\n\n  if (!getSelectionOffsetKeyForNode(nodeBeforeCursor)) {\n    // Our target node may be a leaf or a text node, in which case we're\n    // already where we want to be and can just use the child's length as\n    // our offset.\n    leafKey = nullthrows(offsetKey);\n    textLength = getTextContentLength(nodeBeforeCursor);\n  } else {\n    // Otherwise, we'll look at the child to the left of the cursor and find\n    // the last leaf node in its subtree.\n    var lastLeaf = getLastLeaf(nodeBeforeCursor);\n    leafKey = nullthrows(getSelectionOffsetKeyForNode(lastLeaf));\n    textLength = getTextContentLength(lastLeaf);\n  }\n\n  return {\n    key: leafKey,\n    offset: textLength\n  };\n}\n/**\n * Return the length of a node's textContent, regarding single newline\n * characters as zero-length. This allows us to avoid problems with identifying\n * the correct selection offset for empty blocks in IE, in which we\n * render newlines instead of break tags.\n */\n\n\nfunction getTextContentLength(node) {\n  var textContent = node.textContent;\n  return textContent === '\\n' ? 0 : textContent.length;\n}\n\nmodule.exports = getDraftEditorSelectionWithNodes;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar _require = require(\"./draftKeyUtils\"),\n    notEmptyKey = _require.notEmptyKey;\n/**\n * Return the entity key that should be used when inserting text for the\n * specified target selection, only if the entity is `MUTABLE`. `IMMUTABLE`\n * and `SEGMENTED` entities should not be used for insertion behavior.\n */\n\n\nfunction getEntityKeyForSelection(contentState, targetSelection) {\n  var entityKey;\n\n  if (targetSelection.isCollapsed()) {\n    var key = targetSelection.getAnchorKey();\n    var offset = targetSelection.getAnchorOffset();\n\n    if (offset > 0) {\n      entityKey = contentState.getBlockForKey(key).getEntityAt(offset - 1);\n\n      if (entityKey !== contentState.getBlockForKey(key).getEntityAt(offset)) {\n        return null;\n      }\n\n      return filterKey(contentState.getEntityMap(), entityKey);\n    }\n\n    return null;\n  }\n\n  var startKey = targetSelection.getStartKey();\n  var startOffset = targetSelection.getStartOffset();\n  var startBlock = contentState.getBlockForKey(startKey);\n  entityKey = startOffset === startBlock.getLength() ? null : startBlock.getEntityAt(startOffset);\n  return filterKey(contentState.getEntityMap(), entityKey);\n}\n/**\n * Determine whether an entity key corresponds to a `MUTABLE` entity. If so,\n * return it. If not, return null.\n */\n\n\nfunction filterKey(entityMap, entityKey) {\n  if (notEmptyKey(entityKey)) {\n    var entity = entityMap.__get(entityKey);\n\n    return entity.getMutability() === 'MUTABLE' ? entityKey : null;\n  }\n\n  return null;\n}\n\nmodule.exports = getEntityKeyForSelection;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar getContentStateFragment = require(\"./getContentStateFragment\");\n\nfunction getFragmentFromSelection(editorState) {\n  var selectionState = editorState.getSelection();\n\n  if (selectionState.isCollapsed()) {\n    return null;\n  }\n\n  return getContentStateFragment(editorState.getCurrentContent(), selectionState);\n}\n\nmodule.exports = getFragmentFromSelection;","\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar getNextDelimiterBlockKey = function getNextDelimiterBlockKey(block, blockMap) {\n  var isExperimentalTreeBlock = block instanceof ContentBlockNode;\n\n  if (!isExperimentalTreeBlock) {\n    return null;\n  }\n\n  var nextSiblingKey = block.getNextSiblingKey();\n\n  if (nextSiblingKey) {\n    return nextSiblingKey;\n  }\n\n  var parent = block.getParentKey();\n\n  if (!parent) {\n    return null;\n  }\n\n  var nextNonDescendantBlock = blockMap.get(parent);\n\n  while (nextNonDescendantBlock && !nextNonDescendantBlock.getNextSiblingKey()) {\n    var parentKey = nextNonDescendantBlock.getParentKey();\n    nextNonDescendantBlock = parentKey ? blockMap.get(parentKey) : null;\n  }\n\n  if (!nextNonDescendantBlock) {\n    return null;\n  }\n\n  return nextNonDescendantBlock.getNextSiblingKey();\n};\n\nmodule.exports = getNextDelimiterBlockKey;","\"use strict\";\n\n/**\n * Copyright 2004-present Facebook. All Rights Reserved.\n *\n * \n * @typechecks\n * @format\n */\n\n/**\n * Retrieve an object's own values as an array. If you want the values in the\n * protoype chain, too, use getObjectValuesIncludingPrototype.\n *\n * If you are looking for a function that creates an Array instance based\n * on an \"Array-like\" object, use createArrayFrom instead.\n *\n * @param {object} obj An object.\n * @return {array}     The object's values.\n */\nfunction getOwnObjectValues(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n\nmodule.exports = getOwnObjectValues;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar getRangeClientRects = require(\"./getRangeClientRects\");\n\n/**\n * Like range.getBoundingClientRect() but normalizes for browser bugs.\n */\nfunction getRangeBoundingClientRect(range) {\n  // \"Return a DOMRect object describing the smallest rectangle that includes\n  // the first rectangle in list and all of the remaining rectangles of which\n  // the height or width is not zero.\"\n  // http://www.w3.org/TR/cssom-view/#dom-range-getboundingclientrect\n  var rects = getRangeClientRects(range);\n  var top = 0;\n  var right = 0;\n  var bottom = 0;\n  var left = 0;\n\n  if (rects.length) {\n    // If the first rectangle has 0 width, we use the second, this is needed\n    // because Chrome renders a 0 width rectangle when the selection contains\n    // a line break.\n    if (rects.length > 1 && rects[0].width === 0) {\n      var _rects$ = rects[1];\n      top = _rects$.top;\n      right = _rects$.right;\n      bottom = _rects$.bottom;\n      left = _rects$.left;\n    } else {\n      var _rects$2 = rects[0];\n      top = _rects$2.top;\n      right = _rects$2.right;\n      bottom = _rects$2.bottom;\n      left = _rects$2.left;\n    }\n\n    for (var ii = 1; ii < rects.length; ii++) {\n      var rect = rects[ii];\n\n      if (rect.height !== 0 && rect.width !== 0) {\n        top = Math.min(top, rect.top);\n        right = Math.max(right, rect.right);\n        bottom = Math.max(bottom, rect.bottom);\n        left = Math.min(left, rect.left);\n      }\n    }\n  }\n\n  return {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left,\n    width: right - left,\n    height: bottom - top\n  };\n}\n\nmodule.exports = getRangeBoundingClientRect;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isChrome = UserAgent.isBrowser('Chrome'); // In Chrome, the client rects will include the entire bounds of all nodes that\n// begin (have a start tag) within the selection, even if the selection does\n// not overlap the entire node. To resolve this, we split the range at each\n// start tag and join the client rects together.\n// https://code.google.com/p/chromium/issues/detail?id=324437\n\n/* eslint-disable consistent-return */\n\nfunction getRangeClientRectsChrome(range) {\n  var tempRange = range.cloneRange();\n  var clientRects = [];\n\n  for (var ancestor = range.endContainer; ancestor != null; ancestor = ancestor.parentNode) {\n    // If we've climbed up to the common ancestor, we can now use the\n    // original start point and stop climbing the tree.\n    var atCommonAncestor = ancestor === range.commonAncestorContainer;\n\n    if (atCommonAncestor) {\n      tempRange.setStart(range.startContainer, range.startOffset);\n    } else {\n      tempRange.setStart(tempRange.endContainer, 0);\n    }\n\n    var rects = Array.from(tempRange.getClientRects());\n    clientRects.push(rects);\n\n    if (atCommonAncestor) {\n      var _ref;\n\n      clientRects.reverse();\n      return (_ref = []).concat.apply(_ref, clientRects);\n    }\n\n    tempRange.setEndBefore(ancestor);\n  }\n\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Found an unexpected detached subtree when getting range client rects.') : invariant(false) : void 0;\n}\n/* eslint-enable consistent-return */\n\n/**\n * Like range.getClientRects() but normalizes for browser bugs.\n */\n\n\nvar getRangeClientRects = isChrome ? getRangeClientRectsChrome : function (range) {\n  return Array.from(range.getClientRects());\n};\nmodule.exports = getRangeClientRects;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n/**\n * Obtain the start and end positions of the range that has the\n * specified entity applied to it.\n *\n * Entity keys are applied only to contiguous stretches of text, so this\n * method searches for the first instance of the entity key and returns\n * the subsequent range.\n */\n\n\nfunction getRangesForDraftEntity(block, key) {\n  var ranges = [];\n  block.findEntityRanges(function (c) {\n    return c.getEntity() === key;\n  }, function (start, end) {\n    ranges.push({\n      start: start,\n      end: end\n    });\n  });\n  !!!ranges.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Entity key not found in this range.') : invariant(false) : void 0;\n  return ranges;\n}\n\nmodule.exports = getRangesForDraftEntity;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isOldIE = UserAgent.isBrowser('IE <= 9'); // Provides a dom node that will not execute scripts\n// https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation.createHTMLDocument\n// https://developer.mozilla.org/en-US/Add-ons/Code_snippets/HTML_to_DOM\n\nfunction getSafeBodyFromHTML(html) {\n  var doc;\n  var root = null; // Provides a safe context\n\n  if (!isOldIE && document.implementation && document.implementation.createHTMLDocument) {\n    doc = document.implementation.createHTMLDocument('foo');\n    !doc.documentElement ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing doc.documentElement') : invariant(false) : void 0;\n    doc.documentElement.innerHTML = html;\n    root = doc.getElementsByTagName('body')[0];\n  }\n\n  return root;\n}\n\nmodule.exports = getSafeBodyFromHTML;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n/**\n * Get offset key from a node or it's child nodes. Return the first offset key\n * found on the DOM tree of given node.\n */\n\nvar isElement = require(\"./isElement\");\n\nfunction getSelectionOffsetKeyForNode(node) {\n  if (isElement(node)) {\n    var castedNode = node;\n    var offsetKey = castedNode.getAttribute('data-offset-key');\n\n    if (offsetKey) {\n      return offsetKey;\n    }\n\n    for (var ii = 0; ii < castedNode.childNodes.length; ii++) {\n      var childOffsetKey = getSelectionOffsetKeyForNode(castedNode.childNodes[ii]);\n\n      if (childOffsetKey) {\n        return childOffsetKey;\n      }\n    }\n  }\n\n  return null;\n}\n\nmodule.exports = getSelectionOffsetKeyForNode;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar TEXT_CLIPPING_REGEX = /\\.textClipping$/;\nvar TEXT_TYPES = {\n  'text/plain': true,\n  'text/html': true,\n  'text/rtf': true\n}; // Somewhat arbitrary upper bound on text size. Let's not lock up the browser.\n\nvar TEXT_SIZE_UPPER_BOUND = 5000;\n/**\n * Extract the text content from a file list.\n */\n\nfunction getTextContentFromFiles(files, callback) {\n  var readCount = 0;\n  var results = [];\n  files.forEach(function (\n  /*blob*/\n  file) {\n    readFile(file, function (\n    /*string*/\n    text) {\n      readCount++;\n      text && results.push(text.slice(0, TEXT_SIZE_UPPER_BOUND));\n\n      if (readCount == files.length) {\n        callback(results.join('\\r'));\n      }\n    });\n  });\n}\n/**\n * todo isaac: Do work to turn html/rtf into a content fragment.\n */\n\n\nfunction readFile(file, callback) {\n  if (!global.FileReader || file.type && !(file.type in TEXT_TYPES)) {\n    callback('');\n    return;\n  }\n\n  if (file.type === '') {\n    var _contents = ''; // Special-case text clippings, which have an empty type but include\n    // `.textClipping` in the file name. `readAsText` results in an empty\n    // string for text clippings, so we force the file name to serve\n    // as the text value for the file.\n\n    if (TEXT_CLIPPING_REGEX.test(file.name)) {\n      _contents = file.name.replace(TEXT_CLIPPING_REGEX, '');\n    }\n\n    callback(_contents);\n    return;\n  }\n\n  var reader = new FileReader();\n\n  reader.onload = function () {\n    var result = reader.result;\n    !(typeof result === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'We should be calling \"FileReader.readAsText\" which returns a string') : invariant(false) : void 0;\n    callback(result);\n  };\n\n  reader.onerror = function () {\n    callback('');\n  };\n\n  reader.readAsText(file);\n}\n\nmodule.exports = getTextContentFromFiles;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftOffsetKey = require(\"./DraftOffsetKey\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nfunction getUpdatedSelectionState(editorState, anchorKey, anchorOffset, focusKey, focusOffset) {\n  var selection = nullthrows(editorState.getSelection());\n\n  if (!anchorKey || !focusKey) {\n    // If we cannot make sense of the updated selection state, stick to the current one.\n    if (process.env.NODE_ENV !== \"production\") {\n      /* eslint-disable-next-line */\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\n    }\n\n    return selection;\n  }\n\n  var anchorPath = DraftOffsetKey.decode(anchorKey);\n  var anchorBlockKey = anchorPath.blockKey;\n  var anchorLeafBlockTree = editorState.getBlockTree(anchorBlockKey);\n  var anchorLeaf = anchorLeafBlockTree && anchorLeafBlockTree.getIn([anchorPath.decoratorKey, 'leaves', anchorPath.leafKey]);\n  var focusPath = DraftOffsetKey.decode(focusKey);\n  var focusBlockKey = focusPath.blockKey;\n  var focusLeafBlockTree = editorState.getBlockTree(focusBlockKey);\n  var focusLeaf = focusLeafBlockTree && focusLeafBlockTree.getIn([focusPath.decoratorKey, 'leaves', focusPath.leafKey]);\n\n  if (!anchorLeaf || !focusLeaf) {\n    // If we cannot make sense of the updated selection state, stick to the current one.\n    if (process.env.NODE_ENV !== \"production\") {\n      /* eslint-disable-next-line */\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\n    }\n\n    return selection;\n  }\n\n  var anchorLeafStart = anchorLeaf.get('start');\n  var focusLeafStart = focusLeaf.get('start');\n  var anchorBlockOffset = anchorLeaf ? anchorLeafStart + anchorOffset : null;\n  var focusBlockOffset = focusLeaf ? focusLeafStart + focusOffset : null;\n  var areEqual = selection.getAnchorKey() === anchorBlockKey && selection.getAnchorOffset() === anchorBlockOffset && selection.getFocusKey() === focusBlockKey && selection.getFocusOffset() === focusBlockOffset;\n\n  if (areEqual) {\n    return selection;\n  }\n\n  var isBackward = false;\n\n  if (anchorBlockKey === focusBlockKey) {\n    var anchorLeafEnd = anchorLeaf.get('end');\n    var focusLeafEnd = focusLeaf.get('end');\n\n    if (focusLeafStart === anchorLeafStart && focusLeafEnd === anchorLeafEnd) {\n      isBackward = focusOffset < anchorOffset;\n    } else {\n      isBackward = focusLeafStart < anchorLeafStart;\n    }\n  } else {\n    var startKey = editorState.getCurrentContent().getBlockMap().keySeq().skipUntil(function (v) {\n      return v === anchorBlockKey || v === focusBlockKey;\n    }).first();\n    isBackward = startKey === focusBlockKey;\n  }\n\n  return selection.merge({\n    anchorKey: anchorBlockKey,\n    anchorOffset: anchorBlockOffset,\n    focusKey: focusBlockKey,\n    focusOffset: focusBlockOffset,\n    isBackward: isBackward\n  });\n}\n\nmodule.exports = getUpdatedSelectionState;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar getRangeBoundingClientRect = require(\"./getRangeBoundingClientRect\");\n/**\n * Return the bounding ClientRect for the visible DOM selection, if any.\n * In cases where there are no selected ranges or the bounding rect is\n * temporarily invalid, return null.\n *\n * When using from an iframe, you should pass the iframe window object\n */\n\n\nfunction getVisibleSelectionRect(global) {\n  var selection = global.getSelection();\n\n  if (!selection.rangeCount) {\n    return null;\n  }\n\n  var range = selection.getRangeAt(0);\n  var boundingRect = getRangeBoundingClientRect(range);\n  var top = boundingRect.top,\n      right = boundingRect.right,\n      bottom = boundingRect.bottom,\n      left = boundingRect.left; // When a re-render leads to a node being removed, the DOM selection will\n  // temporarily be placed on an ancestor node, which leads to an invalid\n  // bounding rect. Discard this state.\n\n  if (top === 0 && right === 0 && bottom === 0 && left === 0) {\n    return null;\n  }\n\n  return boundingRect;\n}\n\nmodule.exports = getVisibleSelectionRect;","\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\nfunction getWindowForNode(node) {\n  if (!node || !node.ownerDocument || !node.ownerDocument.defaultView) {\n    return window;\n  }\n\n  return node.ownerDocument.defaultView;\n}\n\nmodule.exports = getWindowForNode;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nmodule.exports = function (name) {\n  if (typeof window !== 'undefined' && window.__DRAFT_GKX) {\n    return !!window.__DRAFT_GKX[name];\n  }\n\n  return false;\n};"],"names":["bidiService","UnicodeBidiService","Immutable","nullthrows","OrderedMap","EditorBidiService","getDirectionMap","content","prevBidiMap","reset","blockMap","getBlockMap","nextBidi","valueSeq","map","block","getDirection","getText","bidiMap","keySeq","zip","is","module","exports","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","BlockTree","ContentState","SelectionState","OrderedSet","Record","Stack","List","EditorStateRecord","allowUndo","currentContent","decorator","directionMap","forceSelection","inCompositionMode","inlineStyleOverride","lastChangeType","nativelyRenderedContent","redoStack","selection","treeMap","undoStack","EditorState","createEmpty","this","createWithText","text","createWithContent","createFromText","contentState","count","firstKey","first","getKey","create","config","recordConfig","generateNewTreeMap","fromJS","v","set","editorState","put","getImmutable","withMutations","state","existingDecorator","get","newContent","getCurrentContent","newTreeMap","previousTreeMap","merge","toSeq","getDecorations","generate","regenerateTreeForNewDecorator","newBlockMap","newEntityMap","prevBlockMap","prevTreeMap","regenerateTreeForNewBlocks","getEntityMap","_proto","prototype","immutable","_immutable","toJS","getAllowUndo","getUndoStack","getRedoStack","getSelection","getDecorator","isInCompositionMode","mustForceSelection","getNativelyRenderedContent","getLastChangeType","getInlineStyleOverride","setInlineStyleOverride","getCurrentInlineStyle","override","isCollapsed","startKey","getStartKey","startOffset","getStartOffset","startBlock","getBlockForKey","getInlineStyleAt","getLength","lookUpwardForInlineStyle","getInlineStyleForCollapsedSelection","getInlineStyleForNonCollapsedSelection","getBlockTree","blockKey","getIn","isSelectionAtStartOfContent","hasEdgeWithin","isSelectionAtEndOfContent","last","end","acceptSelection","updateSelection","getHasFocus","moveSelectionToEnd","lastBlock","getLastBlock","lastKey","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","moveFocusToEnd","afterSelectionMove","push","changeType","undefined","getSelectionAfter","mustBecomeBoundary","getSelectionBefore","indexOf","editorStateChanges","undo","newCurrentContent","peek","shift","redo","toOrderedMap","fromKey","lastNonEmpty","reverse","skipUntil","_","k","skip","UserAgent","isSoftNewlineEvent","isOSX","isPlatform","KeyBindingUtil","isCtrlKeyCommand","e","ctrlKey","altKey","isOptionKeyCommand","usesMacOSHeuristics","hasCommandModifier","metaKey","DraftModifier","adjustBlockDepthForContentState","RichTextEditorUtil","currentBlockContainsLink","entityMap","getAnchorKey","getCharacterList","slice","getEndOffset","some","entity","getEntity","__get","getType","getCurrentBlockType","getDataObjectForLinkURL","uri","url","toString","handleKeyCommand","command","eventTimeStamp","toggleInlineStyle","toggleCode","onBackspace","onDelete","insertSoftNewline","insertText","newEditorState","getAnchorOffset","getFocusOffset","blockBefore","getBlockBefore","withoutAtomicBlock","selectionAfter","withoutBlockStyle","tryToRemoveBlockStyle","blockAfter","getBlockAfter","atomicBlockTarget","removeRange","onTab","event","maxDepth","getFocusKey","type","preventDefault","depth","getDepth","shiftKey","withAdjustment","toggleBlockType","blockType","endKey","getEndKey","skipWhile","typeToSet","setBlockType","inlineStyle","currentStyle","has","remove","add","removeInlineStyle","applyInlineStyle","toggleLink","targetSelection","entityKey","withoutLink","applyEntity","offset","getContentStateFragment","clipboard","SecondaryClipboard","cut","targetRange","blockEnd","keyAfter","getKeyAfter","afterRemoval","paste","replaceWithFragment","_SelectionStateRecord","subClass","superClass","apply","constructor","__proto__","serialize","String","getIsBackward","start","selectionStart","selectionEnd","offsetToCheck","hasFocus","selectionState","adjustment","blocks","takeUntil","Math","max","min","selectionBefore","CharacterMetadata","contentBlock","startArg","characterList","applyEntityToContentBlock","endOffset","newBlocks","sliceStart","sliceEnd","ContentBlock","ContentBlockNode","DraftStringKey","encodeEntityRanges","encodeInlineStyleRanges","invariant","createRawBlock","entityStorageMap","inlineStyleRanges","entityRanges","data","getData","toObject","insertRawBlock","rawBlocks","blockCacheRef","parentKey","getParentKey","rawBlock","children","rawDraftContentState","rawState","entityCacheRef","entityStorageKey","findEntityRanges","character","getEntityAt","stringifiedEntityKey","stringify","encodeRawBlocks","rawEntityMap","index","unstringify","mutability","getMutability","encodeRawEntityMap","_knownListItemDepthCl","DefaultDraftBlockRenderMap","DraftEntity","URI","cx","generateRandomKey","getSafeBodyFromHTML","gkx","_require","Map","isHTMLAnchorElement","isHTMLBRElement","isHTMLElement","isHTMLImageElement","experimentalTreeDataSupport","REGEX_CR","RegExp","REGEX_LF","REGEX_LEADING_LF","REGEX_NBSP","REGEX_CARRIAGE","REGEX_ZWS","boldValues","notBoldValues","anchorAttr","imgAttr","knownListItemDepthClasses","HTMLTagToRawInlineStyleMap","b","code","del","em","s","strike","strong","u","mark","detectInlineStyle","node","style","fontFamily","includes","getListItemDepth","depthClass","classList","contains","isValidAnchor","anchorNode","href","protocol","isValidImage","imageNode","attributes","getNamedItem","styleFromNodeAttributes","htmlElement","fontWeight","fontStyle","textDecoration","isListNode","nodeName","ContentBlocksBuilder","blockTypeMap","disambiguate","clear","blockConfigs","currentBlockType","currentDepth","currentEntity","currentText","wrapper","contentBlocks","addDOMNode","_this$blockConfigs","_toBlockConfigs","_trimCurrentText","_makeBlockConfig","getContentBlocks","_toContentBlocks","_toFlatContentBlocks","parent","prevSibling","nextSibling","childConfigs","nodes","toLowerCase","wasCurrentDepth","wasWrapper","Array","from","childNodes","_addImgNode","_addAnchorNode","newStyle","_addBreakNode","_addTextNode","_wasCurrentDepth","_wasWrapper","_appendText","_this$characterList","characterMetadata","fill","l","begin","trimLeft","trimRight","findEntry","textContent","trim","replace","image","entityConfig","attr","imageAttribute","getAttribute","__create","anchor","anchorAttribute","child","_hoistContainersInBlockConfigs","_this","flatMap","blockConfig","_this2","_this2$_extractTextFr","_extractTextFromBlockConfigs","html","blockRenderMap","safeBody","mapKeys","desc","elements","element","aliasedElements","buildBlockTypeMap","tag","DraftTreeAdapter","createCharacterList","decodeEntityRanges","decodeInlineStyleRanges","decodeBlockNodeConfig","decodeCharacterList","rawEntityRanges","rawInlineStyleRanges","range","hasOwnProperty","addKeyIfMissing","updateNodeStack","stack","parentRef","nodesWithParentRef","decodeRawBlocks","isTreeRawBlock","find","isArray","fromRawStateToRawTreeState","decodeContentBlocks","fromRawTreeStateToRawState","reduce","contentBlockNode","pop","siblings","getChildKeys","_index","isValidBlock","_children","_contentBlockNode","size","decodeContentBlockNodes","rawEntityKey","_rawEntityMap$rawEnti","decodeRawEntityMap","isEmpty","inlineStyles","entities","characterArray","ii","substr","ranges","UnicodeUtils","EMPTY_SET","styles","cursor","notEmptyKey","getEntityKeyForSelection","isEventHandled","isSelectionAtLeafStart","setImmediate","FF_QUICKFIND_CHAR","FF_QUICKFIND_LINK_CHAR","isFirefox","isBrowser","replaceText","editor","_pendingStateFromBeforeInput","update","_latestEditorState","chars","props","handleBeforeInput","timeStamp","mustPreventNative","_latestCommittedEditorState","oldBlockTree","newBlockTree","_ref","oldLeafSet","newLeafSet","oldStart","adjustedStart","oldEnd","adjustedEnd","newStart","newEnd","newDecoratorKey","containsNode","getActiveElement","ownerDocument","currentTarget","Boolean","preserveSelectionOnBlur","body","_selection","defaultView","editorNode","rangeCount","focusNode","removeAllRanges","currentSelection","onBlur","setMode","_onCompositionStart","getFragmentFromSelection","setClipboard","Style","getScrollPosition","isNode","scrollPosition","getScrollParent","fragment","setTimeout","restoreEditorDOM","exitCurrentMode","removeFragment","_internalDrag","onFocus","DraftOffsetKey","findAncestorOffsetKey","keyCommandPlainBackspace","isGecko","isEngine","domSelection","isNotTextOrElementNode","nodeType","Node","TEXT_NODE","ELEMENT_NODE","previousSibling","span","parentNode","nodeValue","firstChild","removeChild","domText","offsetKey","_DraftOffsetKey$decod","decode","decoratorKey","leafKey","_editorState$getBlock","modelText","endsWith","preserveEntity","abs","charDelta","contentWithAdjustedDOMSelection","inputType","nativeEvent","onInputType","Keys","keyCommandBackspaceToStartOfLine","keyCommandBackspaceWord","keyCommandDeleteWord","keyCommandInsertNewline","keyCommandMoveSelectionToEndOfBlock","keyCommandMoveSelectionToStartOfBlock","keyCommandPlainDelete","keyCommandTransposeCharacters","keyCommandUndo","isChrome","keyCode","which","callDeprecatedHandler","handlerName","deprecatedHandler","RETURN","handleReturn","ESC","TAB","UP","RIGHT","DOWN","LEFT","SPACE","keyBindingFn","newState","onKeyCommand","BlockMapBuilder","DataTransfer","DraftPasteProcessor","getTextContentFromFiles","splitTextIntoTextBlocks","insertFragment","clipboardData","isRichText","files","getFiles","defaultFileText","handlePastedFiles","fileText","processText","createFromArray","withInsertedText","textBlocks","getHTML","formatPastedText","_editor$props$formatP","handlePastedText","stripPastedStyles","_html","internalClipboard","getClipboard","getEditorKey","types","every","areTextBlocksAndClipboardEqual","htmlFragment","processHTML","htmlMap","textFragment","textMap","DraftJsDebugLogging","getContentEditableContainer","getDraftEditorSelection","_blockSelectEvents","logBlockedSelectionEvent","anonymizedDom","extraParams","JSON","stacktrace","Error","documentSelection","updatedSelectionState","needsRecovery","strlen","storageMap","encoded","Number","findRangesImmutable","areEqual","a","isTruthy","EMPTY_ARRAY","styleList","c","getStyle","toList","flatten","toSet","styleToEncode","filteredInlines","getEncodedInlinesForType","getCorrectDocumentFromNode","getRangeClientRects","areRectsOnOneLine","rects","lineHeight","minTop","Infinity","minBottom","maxTop","maxBottom","rect","width","top","bottom","getNodeLength","DOCUMENT_TYPE_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","collapsed","containingElement","cloneRange","startContainer","computed","getComputedStyle","correctDocument","div","createElement","fontSize","position","documentBody","appendChild","getBoundingClientRect","height","getLineHeightPx","bestContainer","endContainer","bestOffset","setStart","setStartBefore","display","currentContainer","maxIndexToConsider","isSurrogatePair","getSelectionOffsetKeyForNode","searchNode","documentElement","haystack","areEqualFn","filterFn","foundFn","nextValue","nextIndex","seenKeys","MULTIPLIER","pow","isNaN","floor","random","DraftEntitySegments","getRangesForDraftEntity","getEntityRemovalRange","direction","isEntireSelectionWithinEntity","isEntityAtStart","sideToConsider","entityRange","removalRange","getRemovalRange","endBlock","startEntityKey","endEntityKey","newSelectionState","startSelectionState","endSelectionState","_startSelectionState","_endSelectionState","editorContainer","randomizeBlockMapKeys","removeEntitiesAtEdges","blockKeys","startIndex","endIndex","document","shouldFixFirefoxMovement","shouldRemoveWord","getZCommand","DELETE","getDeleteCommand","BACKSPACE","getBackspaceCommand","getDraftEditorSelectionWithNodes","root","getUpdatedSelectionState","isElement","getPointForNonTextNode","editorRoot","startNode","childOffset","firstLeaf","getFirstLeaf","nodeBeforeCursor","textLength","lastLeaf","lastChild","getLastLeaf","getTextContentLength","anchorIsTextNode","focusIsTextNode","anchorPoint","focusPoint","filterKey","nextSiblingKey","getNextSiblingKey","nextNonDescendantBlock","right","left","_rects$","_rects$2","tempRange","clientRects","ancestor","atCommonAncestor","commonAncestorContainer","getClientRects","setEndBefore","isOldIE","doc","implementation","createHTMLDocument","innerHTML","getElementsByTagName","castedNode","childOffsetKey","TEXT_CLIPPING_REGEX","TEXT_TYPES","callback","readCount","results","file","g","FileReader","_contents","test","name","reader","onload","result","onerror","readAsText","readFile","join","anchorPath","anchorBlockKey","anchorLeafBlockTree","anchorLeaf","focusPath","focusBlockKey","focusLeafBlockTree","focusLeaf","anchorLeafStart","focusLeafStart","anchorBlockOffset","focusBlockOffset","anchorLeafEnd","focusLeafEnd","getRangeBoundingClientRect","global","getRangeAt","boundingRect","window","__DRAFT_GKX"],"sourceRoot":""}